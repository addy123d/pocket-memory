

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Apr 16 12:22:56 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 12/10/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F25K22 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     
    69                           	psect	idataCOMRAM
    70   000BA4                     __pidataCOMRAM:
    71                           	callstack 0
    72                           
    73                           ;initializer for _digits
    74   000BA4  00                 	db	0
    75   000BA5  01                 	db	1
    76   000BA6  02                 	db	2
    77   000BA7  03                 	db	3
    78   000BA8  04                 	db	4
    79   000BA9  05                 	db	5
    80   000BAA  06                 	db	6
    81   000BAB  07                 	db	7
    82   000BAC  08                 	db	8
    83   000BAD  09                 	db	9
    84                           
    85                           ;initializer for _timeout
    86   000BAE  03E8               	dw	1000
    87                           
    88                           ;initializer for _checkAck
    89   000BB0  01                 	db	1
    90   000000                     _EECON2	set	4007
    91   000000                     _RCREG	set	4014
    92   000000                     _TXREG	set	4013
    93   000000                     _SPBRG1	set	4015
    94   000000                     _TRISCbits	set	3988
    95   000000                     _TRISC7	set	31911
    96   000000                     _ANSELCbits	set	3898
    97   000000                     _TRISC6	set	31910
    98   000000                     _OSCTUNE	set	3995
    99   000000                     _PIE1bits	set	3997
   100   000000                     _INTCONbits	set	4082
   101   000000                     _PIE2bits	set	4000
   102   000000                     _EECON1bits	set	4006
   103   000000                     _EEDATA	set	4008
   104   000000                     _EEADR	set	4009
   105   000000                     _PIR1bits	set	3998
   106   000000                     _RCSTA1	set	4011
   107   000000                     _TXSTA1	set	4012
   108   000000                     _SSP1CON2bits	set	4037
   109   000000                     _SSP1CON1	set	4038
   110   000000                     _SSP1STAT	set	4039
   111   000000                     _OSCCON	set	4051
   112   000000                     _PIR2bits	set	4001
   113   000000                     _SSP1BUF	set	4041
   114   000000                     _SSP1ADD	set	4040
   115                           
   116                           ; #config settings
   117                           
   118                           	psect	cinit
   119   0009F8                     __pcinit:
   120                           	callstack 0
   121   0009F8                     start_initialization:
   122                           	callstack 0
   123   0009F8                     __initialization:
   124                           	callstack 0
   125                           
   126                           ; Initialize objects allocated to COMRAM (13 bytes)
   127                           ; load TBLPTR registers with __pidataCOMRAM
   128   0009F8  0EA4               	movlw	low __pidataCOMRAM
   129   0009FA  6EF6               	movwf	tblptrl,c
   130   0009FC  0E0B               	movlw	high __pidataCOMRAM
   131   0009FE  6EF7               	movwf	tblptrh,c
   132   000A00  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   133   000A02  6EF8               	movwf	tblptru,c
   134   000A04  EE00  F02A         	lfsr	0,__pdataCOMRAM
   135   000A08  EE10 F00D          	lfsr	1,13
   136   000A0C                     copy_data0:
   137   000A0C  0009               	tblrd		*+
   138   000A0E  CFF5 FFEE          	movff	tablat,postinc0
   139   000A12  50E5               	movf	postdec1,w,c
   140   000A14  50E1               	movf	fsr1l,w,c
   141   000A16  E1FA               	bnz	copy_data0
   142                           
   143                           ; Clear objects allocated to BANK0 (154 bytes)
   144   000A18  EE00  F060         	lfsr	0,__pbssBANK0
   145   000A1C  0E9A               	movlw	154
   146   000A1E                     clear_0:
   147   000A1E  6AEE               	clrf	postinc0,c
   148   000A20  06E8               	decf	wreg,f,c
   149   000A22  E1FD               	bnz	clear_0
   150                           
   151                           ; Clear objects allocated to COMRAM (15 bytes)
   152   000A24  EE00  F01B         	lfsr	0,__pbssCOMRAM
   153   000A28  0E0F               	movlw	15
   154   000A2A                     clear_1:
   155   000A2A  6AEE               	clrf	postinc0,c
   156   000A2C  06E8               	decf	wreg,f,c
   157   000A2E  E1FD               	bnz	clear_1
   158   000A30                     end_of_initialization:
   159                           	callstack 0
   160   000A30                     __end_of__initialization:
   161                           	callstack 0
   162   000A30  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   163   000A32  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   164   000A34  0E00               	movlw	low (__Lmediumconst shr (0+16))
   165   000A36  6EF8               	movwf	tblptru,c
   166   000A38  0100               	movlb	0
   167   000A3A  EF58  F005         	goto	_main	;jump to C main() function
   168                           
   169                           	psect	bssCOMRAM
   170   00001B                     __pbssCOMRAM:
   171                           	callstack 0
   172   00001B                     _responseBuffer:
   173                           	callstack 0
   174   00001B                     	ds	10
   175   000025                     _at24_eeprom_address:
   176                           	callstack 0
   177   000025                     	ds	2
   178   000027                     _end_sequence_flag:
   179                           	callstack 0
   180   000027                     	ds	1
   181   000028                     _start_sequence_flag:
   182                           	callstack 0
   183   000028                     	ds	1
   184   000029                     _interrupt_flag:
   185                           	callstack 0
   186   000029                     	ds	1
   187                           
   188                           	psect	dataCOMRAM
   189   00002A                     __pdataCOMRAM:
   190                           	callstack 0
   191   00002A                     _digits:
   192                           	callstack 0
   193   00002A                     	ds	10
   194   000034                     _timeout:
   195                           	callstack 0
   196   000034                     	ds	2
   197   000036                     _checkAck:
   198                           	callstack 0
   199   000036                     	ds	1
   200                           
   201                           	psect	bssBANK0
   202   000060                     __pbssBANK0:
   203                           	callstack 0
   204   000060                     _receiveData:
   205                           	callstack 0
   206   000060                     	ds	52
   207   000094                     _request_unit:
   208                           	callstack 0
   209   000094                     	ds	52
   210   0000C8                     _requestBuffer:
   211                           	callstack 0
   212   0000C8                     	ds	50
   213                           
   214                           	psect	cstackCOMRAM
   215   000001                     __pcstackCOMRAM:
   216                           	callstack 0
   217   000001                     processRequest@i:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x0
   221   000001                     	ds	2
   222   000003                     processRequest@length_index:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x2
   226   000003                     	ds	2
   227   000005                     processRequest@buffer_index:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x4
   231   000005                     	ds	2
   232   000007                     ??_isr:
   233                           
   234                           ; 1 bytes @ 0x6
   235   000007                     	ds	4
   236   00000B                     isr@receivedChar:
   237                           	callstack 0
   238                           
   239                           ; 1 bytes @ 0xA
   240   00000B                     	ds	1
   241   00000C                     ?___fltol:
   242                           	callstack 0
   243   00000C                     UART_TransmitChar@data:
   244                           	callstack 0
   245   00000C                     EEPROM_Write@eep_data:
   246                           	callstack 0
   247   00000C                     EEPROM_Read@addr:
   248                           	callstack 0
   249   00000C                     I2C2_Send@BYTE:
   250                           	callstack 0
   251   00000C                     ___fltol@f1:
   252                           	callstack 0
   253                           
   254                           ; 4 bytes @ 0xB
   255   00000C                     	ds	1
   256   00000D                     ??_sendResponse:
   257   00000D                     EEPROM_Write@addr:
   258                           	callstack 0
   259   00000D                     writeByteAT24_EEPROM@address:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0xC
   263   00000D                     	ds	1
   264   00000E                     sendResponse@index:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0xD
   268   00000E                     	ds	1
   269   00000F                     writeByteAT24_EEPROM@data:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0xE
   273   00000F                     	ds	1
   274   000010                     ??_writeDataToEEPROM:
   275   000010                     ??___fltol:
   276                           
   277                           ; 1 bytes @ 0xF
   278   000010                     	ds	2
   279   000012                     writeDataToEEPROM@at24_eep_addr_H:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x11
   283   000012                     	ds	1
   284   000013                     writeDataToEEPROM@at24_eep_addr_L:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x12
   288   000013                     	ds	1
   289   000014                     ___fltol@sign1:
   290                           	callstack 0
   291   000014                     writeDataToEEPROM@payload_length:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x13
   295   000014                     	ds	1
   296   000015                     ___fltol@exp1:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x14
   300   000015                     	ds	1
   301   000016                     writeDataToEEPROM@at24_eeprom_addr_start:
   302                           	callstack 0
   303   000016                     UART_Init@temp:
   304                           	callstack 0
   305                           
   306                           ; 4 bytes @ 0x15
   307   000016                     	ds	2
   308   000018                     writeDataToEEPROM@i:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x17
   312   000018                     	ds	2
   313   00001A                     createResponse@ORDER_CODE:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x19
   317   00001A                     	ds	1
   318   00001B                     
   319                           ; 1 bytes @ 0x1A
   320 ;;
   321 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   322 ;;
   323 ;; *************** function _main *****************
   324 ;; Defined at:
   325 ;;		line 540 in file "main.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   339 ;;      Params:         0       0       0       0       0       0       0
   340 ;;      Locals:         0       0       0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0       0       0
   342 ;;      Totals:         0       0       0       0       0       0       0
   343 ;;Total ram usage:        0 bytes
   344 ;; Hardware stack levels required when called: 6
   345 ;; This function calls:
   346 ;;		_I2C2_Init
   347 ;;		_UART_Init
   348 ;;		_createResponse
   349 ;; This function is called by:
   350 ;;		Startup code after reset
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text0
   355   000AB0                     __ptext0:
   356                           	callstack 0
   357   000AB0                     _main:
   358                           	callstack 25
   359   000AB0                     
   360                           ;main.c: 543:  OSCCON = 0x70;
   361   000AB0  0E70               	movlw	112
   362   000AB2  6ED3               	movwf	211,c	;volatile
   363                           
   364                           ;main.c: 544:  OSCTUNE = 0xC0;
   365   000AB4  0EC0               	movlw	192
   366   000AB6  6E9B               	movwf	155,c	;volatile
   367   000AB8                     
   368                           ;main.c: 559:  UART_Init();
   369   000AB8  EC1F  F005         	call	_UART_Init	;wreg free
   370   000ABC                     
   371                           ;main.c: 560:  I2C2_Init();
   372   000ABC  EC97  F005         	call	_I2C2_Init	;wreg free
   373   000AC0                     l1510:
   374                           
   375                           ;main.c: 563:  {;main.c: 564:   if (interrupt_flag)
   376   000AC0  5029               	movf	_interrupt_flag^0,w,c
   377   000AC2  B4D8               	btfsc	status,2,c
   378   000AC4  EF66  F005         	goto	u721
   379   000AC8  EF68  F005         	goto	u720
   380   000ACC                     u721:
   381   000ACC  EF60  F005         	goto	l1510
   382   000AD0                     u720:
   383   000AD0                     
   384                           ;main.c: 565:   {;main.c: 566:    createResponse();
   385   000AD0  ECCC  F004         	call	_createResponse	;wreg free
   386   000AD4                     
   387                           ;main.c: 567:    interrupt_flag = 0x00;
   388   000AD4  0E00               	movlw	0
   389   000AD6  6E29               	movwf	_interrupt_flag^0,c
   390   000AD8  EF60  F005         	goto	l1510
   391   000ADC  EFB4  F000         	goto	start
   392   000AE0                     __end_of_main:
   393                           	callstack 0
   394                           
   395 ;; *************** function _createResponse *****************
   396 ;; Defined at:
   397 ;;		line 302 in file "main.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;  ORDER_CODE      1   25[COMRAM] unsigned char 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   411 ;;      Params:         0       0       0       0       0       0       0
   412 ;;      Locals:         1       0       0       0       0       0       0
   413 ;;      Temps:          0       0       0       0       0       0       0
   414 ;;      Totals:         1       0       0       0       0       0       0
   415 ;;Total ram usage:        1 bytes
   416 ;; Hardware stack levels used: 1
   417 ;; Hardware stack levels required when called: 5
   418 ;; This function calls:
   419 ;;		_createPingResponse
   420 ;;		_sendResponse
   421 ;;		_writeDataToEEPROM
   422 ;; This function is called by:
   423 ;;		_main
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text1
   428   000998                     __ptext1:
   429                           	callstack 0
   430   000998                     _createResponse:
   431                           	callstack 25
   432   000998                     
   433                           ;main.c: 304:  unsigned char ORDER_CODE = request_unit.ORDER_CODE;
   434   000998  C095  F01A         	movff	_request_unit+1,createResponse@ORDER_CODE
   435   00099C                     
   436                           ;main.c: 307:  if (request_unit.DEVICE_ADDR == 0x21)
   437   00099C  0E21               	movlw	33
   438   00099E  0100               	movlb	0	; () banked
   439   0009A0  1994               	xorwf	_request_unit& (0+255),w,b
   440   0009A2  A4D8               	btfss	status,2,c
   441   0009A4  EFD6  F004         	goto	u591
   442   0009A8  EFD8  F004         	goto	u590
   443   0009AC                     u591:
   444   0009AC  EFFB  F004         	goto	l128
   445   0009B0                     u590:
   446   0009B0  EFE2  F004         	goto	l1440
   447   0009B4                     l1434:
   448                           
   449                           ; BSR set to: 0
   450                           ;main.c: 313:    createPingResponse();
   451   0009B4  ECC2  F005         	call	_createPingResponse	;wreg free
   452                           
   453                           ;main.c: 314:    break;
   454   0009B8  EFF9  F004         	goto	l1442
   455   0009BC                     l1436:
   456                           
   457                           ; BSR set to: 0
   458                           ;main.c: 316:    writeDataToEEPROM();
   459   0009BC  EC01  F003         	call	_writeDataToEEPROM	;wreg free
   460                           
   461                           ;main.c: 317:    break;
   462   0009C0  EFF9  F004         	goto	l1442
   463   0009C4                     l1440:
   464                           
   465                           ; BSR set to: 0
   466   0009C4  501A               	movf	createResponse@ORDER_CODE^0,w,c
   467                           
   468                           ; Switch size 1, requested type "simple"
   469                           ; Number of cases is 5, Range of values is 1 to 17
   470                           ; switch strategies available:
   471                           ; Name         Instructions Cycles
   472                           ; simple_byte           16     9 (average)
   473                           ;	Chosen strategy is simple_byte
   474   0009C6  0A01               	xorlw	1	; case 1
   475   0009C8  B4D8               	btfsc	status,2,c
   476   0009CA  EFDE  F004         	goto	l1436
   477   0009CE  0A03               	xorlw	3	; case 2
   478   0009D0  B4D8               	btfsc	status,2,c
   479   0009D2  EFF9  F004         	goto	l1442
   480   0009D6  0A01               	xorlw	1	; case 3
   481   0009D8  B4D8               	btfsc	status,2,c
   482   0009DA  EFF9  F004         	goto	l1442
   483   0009DE  0A07               	xorlw	7	; case 4
   484   0009E0  B4D8               	btfsc	status,2,c
   485   0009E2  EFF9  F004         	goto	l1442
   486   0009E6  0A15               	xorlw	21	; case 17
   487   0009E8  B4D8               	btfsc	status,2,c
   488   0009EA  EFDA  F004         	goto	l1434
   489   0009EE  EFF9  F004         	goto	l1442
   490   0009F2                     l1442:
   491                           
   492                           ;main.c: 329:   sendResponse();
   493   0009F2  EC3E  F004         	call	_sendResponse	;wreg free
   494   0009F6                     l128:
   495   0009F6  0012               	return		;funcret
   496   0009F8                     __end_of_createResponse:
   497                           	callstack 0
   498                           
   499 ;; *************** function _writeDataToEEPROM *****************
   500 ;; Defined at:
   501 ;;		line 352 in file "main.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;  i               2   23[COMRAM] unsigned short 
   506 ;;  at24_eeprom_    2   21[COMRAM] unsigned short 
   507 ;;  payload_leng    2   19[COMRAM] unsigned short 
   508 ;;  at24_eep_add    1   18[COMRAM] unsigned char 
   509 ;;  at24_eep_add    1   17[COMRAM] unsigned char 
   510 ;;  eeprom_data     1    0        unsigned char 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   520 ;;      Params:         0       0       0       0       0       0       0
   521 ;;      Locals:         8       0       0       0       0       0       0
   522 ;;      Temps:          2       0       0       0       0       0       0
   523 ;;      Totals:        10       0       0       0       0       0       0
   524 ;;Total ram usage:       10 bytes
   525 ;; Hardware stack levels used: 1
   526 ;; Hardware stack levels required when called: 4
   527 ;; This function calls:
   528 ;;		_EEPROM_Read
   529 ;;		_EEPROM_Write
   530 ;;		_writeByteAT24_EEPROM
   531 ;; This function is called by:
   532 ;;		_createResponse
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text2
   537   000602                     __ptext2:
   538                           	callstack 0
   539   000602                     _writeDataToEEPROM:
   540                           	callstack 25
   541   000602                     
   542                           ;main.c: 356:  unsigned char at24_eep_addr_H = 0x00;
   543   000602  0E00               	movlw	0
   544   000604  6E12               	movwf	writeDataToEEPROM@at24_eep_addr_H^0,c
   545                           
   546                           ;main.c: 357:  unsigned char at24_eep_addr_L = 0x00;
   547   000606  0E00               	movlw	0
   548   000608  6E13               	movwf	writeDataToEEPROM@at24_eep_addr_L^0,c
   549                           
   550                           ;main.c: 358:  unsigned short at24_eeprom_addr_start = 0x0000;
   551   00060A  0E00               	movlw	0
   552   00060C  6E17               	movwf	(writeDataToEEPROM@at24_eeprom_addr_start+1)^0,c
   553   00060E  0E00               	movlw	0
   554   000610  6E16               	movwf	writeDataToEEPROM@at24_eeprom_addr_start^0,c
   555   000612                     
   556                           ;main.c: 364:  at24_eep_addr_H = EEPROM_Read(ADDRESS_POINTER_H);
   557   000612  0E0A               	movlw	10
   558   000614  ECCB  F005         	call	_EEPROM_Read
   559   000618  6E12               	movwf	writeDataToEEPROM@at24_eep_addr_H^0,c
   560   00061A                     
   561                           ;main.c: 365:  _delay((unsigned long)((500)*(64000000/4000.0)));
   562   00061A  0E29               	movlw	41
   563   00061C  6E11               	movwf	(??_writeDataToEEPROM+1)^0,c
   564   00061E  0E96               	movlw	150
   565   000620  6E10               	movwf	??_writeDataToEEPROM^0,c
   566   000622  0E7F               	movlw	127
   567   000624                     u737:
   568   000624  2EE8               	decfsz	wreg,f,c
   569   000626  D7FE               	bra	u737
   570   000628  2E10               	decfsz	??_writeDataToEEPROM^0,f,c
   571   00062A  D7FC               	bra	u737
   572   00062C  2E11               	decfsz	(??_writeDataToEEPROM+1)^0,f,c
   573   00062E  D7FA               	bra	u737
   574   000630  0000               	nop	
   575   000632                     
   576                           ;main.c: 366:  at24_eep_addr_L = EEPROM_Read(ADDRESS_POINTER_L);
   577   000632  0E0B               	movlw	11
   578   000634  ECCB  F005         	call	_EEPROM_Read
   579   000638  6E13               	movwf	writeDataToEEPROM@at24_eep_addr_L^0,c
   580   00063A                     
   581                           ;main.c: 369:  at24_eeprom_address = (at24_eep_addr_H << 8) | at24_eep_addr_L;
   582   00063A  5013               	movf	writeDataToEEPROM@at24_eep_addr_L^0,w,c
   583   00063C  C012  F010         	movff	writeDataToEEPROM@at24_eep_addr_H,??_writeDataToEEPROM
   584   000640  6A11               	clrf	(??_writeDataToEEPROM+1)^0,c
   585   000642  C010  F011         	movff	??_writeDataToEEPROM,??_writeDataToEEPROM+1
   586   000646  6A10               	clrf	??_writeDataToEEPROM^0,c
   587   000648  1010               	iorwf	??_writeDataToEEPROM^0,w,c
   588   00064A  6E25               	movwf	_at24_eeprom_address^0,c
   589   00064C  5011               	movf	(??_writeDataToEEPROM+1)^0,w,c
   590   00064E  6E26               	movwf	(_at24_eeprom_address+1)^0,c
   591   000650                     
   592                           ;main.c: 372:  if(at24_eeprom_address == 0xFFFF)
   593   000650  2825               	incf	_at24_eeprom_address^0,w,c
   594   000652  E106               	bnz	u451
   595   000654  2826               	incf	(_at24_eeprom_address+1)^0,w,c
   596   000656  A4D8               	btfss	status,2,c
   597   000658  EF30  F003         	goto	u451
   598   00065C  EF32  F003         	goto	u450
   599   000660                     u451:
   600   000660  EF36  F003         	goto	l1288
   601   000664                     u450:
   602   000664                     
   603                           ;main.c: 373:   at24_eeprom_address = 0x0000;
   604   000664  0E00               	movlw	0
   605   000666  6E26               	movwf	(_at24_eeprom_address+1)^0,c
   606   000668  0E00               	movlw	0
   607   00066A  6E25               	movwf	_at24_eeprom_address^0,c
   608   00066C                     l1288:
   609                           
   610                           ;main.c: 376:  at24_eeprom_addr_start = at24_eeprom_address;
   611   00066C  C025  F016         	movff	_at24_eeprom_address,writeDataToEEPROM@at24_eeprom_addr_start
   612   000670  C026  F017         	movff	_at24_eeprom_address+1,writeDataToEEPROM@at24_eeprom_addr_start+1
   613   000674                     
   614                           ;main.c: 379:  payload_length = (requestBuffer[request_unit.payload_length_index]) & 0xF
      +                          F;
   615   000674  0100               	movlb	0	; () banked
   616   000676  5196               	movf	(_request_unit+2)& (0+255),w,b
   617   000678  0FC8               	addlw	low _requestBuffer
   618   00067A  6ED9               	movwf	fsr2l,c
   619   00067C  6ADA               	clrf	fsr2h,c
   620   00067E  50DF               	movf	indf2,w,c
   621   000680  6E10               	movwf	??_writeDataToEEPROM^0,c
   622   000682  5010               	movf	??_writeDataToEEPROM^0,w,c
   623   000684  6E14               	movwf	writeDataToEEPROM@payload_length^0,c
   624   000686  6A15               	clrf	(writeDataToEEPROM@payload_length+1)^0,c
   625   000688                     
   626                           ; BSR set to: 0
   627                           ;main.c: 382:  writeByteAT24_EEPROM(at24_eeprom_address, requestBuffer[request_unit.payl
      +                          oad_length_index]);
   628   000688  C025  F00D         	movff	_at24_eeprom_address,writeByteAT24_EEPROM@address
   629   00068C  C026  F00E         	movff	_at24_eeprom_address+1,writeByteAT24_EEPROM@address+1
   630   000690  5196               	movf	(_request_unit+2)& (0+255),w,b
   631   000692  0FC8               	addlw	low _requestBuffer
   632   000694  6ED9               	movwf	fsr2l,c
   633   000696  6ADA               	clrf	fsr2h,c
   634   000698  50DF               	movf	indf2,w,c
   635   00069A  6E0F               	movwf	writeByteAT24_EEPROM@data^0,c
   636   00069C  EC85  F005         	call	_writeByteAT24_EEPROM	;wreg free
   637   0006A0                     
   638                           ;main.c: 383:  at24_eeprom_address += 1;
   639   0006A0  4A25               	infsnz	_at24_eeprom_address^0,f,c
   640   0006A2  2A26               	incf	(_at24_eeprom_address+1)^0,f,c
   641   0006A4                     
   642                           ;main.c: 385:  _delay((unsigned long)((10)*(64000000/4000.0)));
   643   0006A4  0ED0               	movlw	208
   644   0006A6  6E10               	movwf	??_writeDataToEEPROM^0,c
   645   0006A8  0ECA               	movlw	202
   646   0006AA                     u747:
   647   0006AA  2EE8               	decfsz	wreg,f,c
   648   0006AC  D7FE               	bra	u747
   649   0006AE  2E10               	decfsz	??_writeDataToEEPROM^0,f,c
   650   0006B0  D7FC               	bra	u747
   651   0006B2                     
   652                           ;main.c: 388:  for(unsigned short i = 0; i < payload_length; i++){
   653   0006B2  0E00               	movlw	0
   654   0006B4  6E19               	movwf	(writeDataToEEPROM@i+1)^0,c
   655   0006B6  0E00               	movlw	0
   656   0006B8  6E18               	movwf	writeDataToEEPROM@i^0,c
   657   0006BA  EF76  F003         	goto	l1306
   658   0006BE                     l1300:
   659                           
   660                           ;main.c: 389:   writeByteAT24_EEPROM((at24_eeprom_address + i), request_unit.payload_dat
      +                          a[i]);
   661   0006BE  5018               	movf	writeDataToEEPROM@i^0,w,c
   662   0006C0  2425               	addwf	_at24_eeprom_address^0,w,c
   663   0006C2  6E0D               	movwf	writeByteAT24_EEPROM@address^0,c
   664   0006C4  5019               	movf	(writeDataToEEPROM@i+1)^0,w,c
   665   0006C6  2026               	addwfc	(_at24_eeprom_address+1)^0,w,c
   666   0006C8  6E0E               	movwf	(writeByteAT24_EEPROM@address+1)^0,c
   667   0006CA  5018               	movf	writeDataToEEPROM@i^0,w,c
   668   0006CC  0F98               	addlw	low (_request_unit+4)
   669   0006CE  6ED9               	movwf	fsr2l,c
   670   0006D0  6ADA               	clrf	fsr2h,c
   671   0006D2  50DF               	movf	indf2,w,c
   672   0006D4  6E0F               	movwf	writeByteAT24_EEPROM@data^0,c
   673   0006D6  EC85  F005         	call	_writeByteAT24_EEPROM	;wreg free
   674   0006DA                     
   675                           ;main.c: 390:   _delay((unsigned long)((10)*(64000000/4000.0)));
   676   0006DA  0ED0               	movlw	208
   677   0006DC  6E10               	movwf	??_writeDataToEEPROM^0,c
   678   0006DE  0ECA               	movlw	202
   679   0006E0                     u757:
   680   0006E0  2EE8               	decfsz	wreg,f,c
   681   0006E2  D7FE               	bra	u757
   682   0006E4  2E10               	decfsz	??_writeDataToEEPROM^0,f,c
   683   0006E6  D7FC               	bra	u757
   684   0006E8                     
   685                           ;main.c: 391:  }
   686   0006E8  4A18               	infsnz	writeDataToEEPROM@i^0,f,c
   687   0006EA  2A19               	incf	(writeDataToEEPROM@i+1)^0,f,c
   688   0006EC                     l1306:
   689   0006EC  5014               	movf	writeDataToEEPROM@payload_length^0,w,c
   690   0006EE  5C18               	subwf	writeDataToEEPROM@i^0,w,c
   691   0006F0  5015               	movf	(writeDataToEEPROM@payload_length+1)^0,w,c
   692   0006F2  5819               	subwfb	(writeDataToEEPROM@i+1)^0,w,c
   693   0006F4  A0D8               	btfss	status,0,c
   694   0006F6  EF7F  F003         	goto	u461
   695   0006FA  EF81  F003         	goto	u460
   696   0006FE                     u461:
   697   0006FE  EF5F  F003         	goto	l1300
   698   000702                     u460:
   699   000702                     
   700                           ;main.c: 394:  at24_eeprom_address += payload_length;
   701   000702  5014               	movf	writeDataToEEPROM@payload_length^0,w,c
   702   000704  2625               	addwf	_at24_eeprom_address^0,f,c
   703   000706  5015               	movf	(writeDataToEEPROM@payload_length+1)^0,w,c
   704   000708  2226               	addwfc	(_at24_eeprom_address+1)^0,f,c
   705   00070A                     
   706                           ;main.c: 401:  EEPROM_Write(ADDRESS_POINTER_H, ((at24_eeprom_address >> 8) & 0xFF));
   707   00070A  5026               	movf	(_at24_eeprom_address+1)^0,w,c
   708   00070C  6E0C               	movwf	EEPROM_Write@eep_data^0,c
   709   00070E  0E0A               	movlw	10
   710   000710  EC3F  F005         	call	_EEPROM_Write
   711   000714                     
   712                           ;main.c: 402:  _delay((unsigned long)((50)*(64000000/4000.0)));
   713   000714  0E05               	movlw	5
   714   000716  6E11               	movwf	(??_writeDataToEEPROM+1)^0,c
   715   000718  0E0F               	movlw	15
   716   00071A  6E10               	movwf	??_writeDataToEEPROM^0,c
   717   00071C  0EF1               	movlw	241
   718   00071E                     u767:
   719   00071E  2EE8               	decfsz	wreg,f,c
   720   000720  D7FE               	bra	u767
   721   000722  2E10               	decfsz	??_writeDataToEEPROM^0,f,c
   722   000724  D7FC               	bra	u767
   723   000726  2E11               	decfsz	(??_writeDataToEEPROM+1)^0,f,c
   724   000728  D7FA               	bra	u767
   725   00072A  0000               	nop	
   726   00072C                     
   727                           ;main.c: 403:  EEPROM_Write(ADDRESS_POINTER_L, (at24_eeprom_address & 0xFF));
   728   00072C  C025  F00C         	movff	_at24_eeprom_address,EEPROM_Write@eep_data
   729   000730  0E0B               	movlw	11
   730   000732  EC3F  F005         	call	_EEPROM_Write
   731   000736                     
   732                           ;main.c: 404:  _delay((unsigned long)((50)*(64000000/4000.0)));
   733   000736  0E05               	movlw	5
   734   000738  6E11               	movwf	(??_writeDataToEEPROM+1)^0,c
   735   00073A  0E0F               	movlw	15
   736   00073C  6E10               	movwf	??_writeDataToEEPROM^0,c
   737   00073E  0EF1               	movlw	241
   738   000740                     u777:
   739   000740  2EE8               	decfsz	wreg,f,c
   740   000742  D7FE               	bra	u777
   741   000744  2E10               	decfsz	??_writeDataToEEPROM^0,f,c
   742   000746  D7FC               	bra	u777
   743   000748  2E11               	decfsz	(??_writeDataToEEPROM+1)^0,f,c
   744   00074A  D7FA               	bra	u777
   745   00074C  0000               	nop	
   746   00074E                     
   747                           ;main.c: 421:  responseBuffer[0] = request_unit.DEVICE_ADDR;
   748   00074E  C094  F01B         	movff	_request_unit,_responseBuffer
   749   000752                     
   750                           ;main.c: 422:  responseBuffer[1] = request_unit.ORDER_CODE;
   751   000752  C095  F01C         	movff	_request_unit+1,_responseBuffer+1
   752   000756                     
   753                           ;main.c: 423:  responseBuffer[2] = (at24_eeprom_addr_start >> 8) & 0xFF;
   754   000756  5017               	movf	(writeDataToEEPROM@at24_eeprom_addr_start+1)^0,w,c
   755   000758  6E1D               	movwf	(_responseBuffer+2)^0,c
   756   00075A                     
   757                           ;main.c: 424:  responseBuffer[3] = at24_eeprom_addr_start & 0xFF;
   758   00075A  C016  F01E         	movff	writeDataToEEPROM@at24_eeprom_addr_start,_responseBuffer+3
   759   00075E                     
   760                           ;main.c: 425:  responseBuffer[4] = (!checkAck) ? 0x01 : 0x00;
   761   00075E  5036               	movf	_checkAck^0,w,c
   762   000760  B4D8               	btfsc	status,2,c
   763   000762  EFB5  F003         	goto	u471
   764   000766  EFB8  F003         	goto	u470
   765   00076A                     u471:
   766   00076A  0E01               	movlw	1
   767   00076C  EFB9  F003         	goto	u480
   768   000770                     u470:
   769   000770  0E00               	movlw	0
   770   000772                     u480:
   771   000772  6E1F               	movwf	(_responseBuffer+4)^0,c
   772   000774  0012               	return		;funcret
   773   000776                     __end_of_writeDataToEEPROM:
   774                           	callstack 0
   775                           
   776 ;; *************** function _writeByteAT24_EEPROM *****************
   777 ;; Defined at:
   778 ;;		line 434 in file "main.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  address         2   12[COMRAM] unsigned int 
   781 ;;  data            1   14[COMRAM] unsigned char 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, status,2, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   793 ;;      Params:         3       0       0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0
   796 ;;      Totals:         3       0       0       0       0       0       0
   797 ;;Total ram usage:        3 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; Hardware stack levels required when called: 3
   800 ;; This function calls:
   801 ;;		_I2C2_Send
   802 ;;		_I2C2_Start
   803 ;;		_I2C2_Stop
   804 ;; This function is called by:
   805 ;;		_writeDataToEEPROM
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text3
   810   000B0A                     __ptext3:
   811                           	callstack 0
   812   000B0A                     _writeByteAT24_EEPROM:
   813                           	callstack 25
   814   000B0A                     
   815                           ;main.c: 434: void writeByteAT24_EEPROM(unsigned int address, unsigned char data);main.c
      +                          : 435: {;main.c: 436:  I2C2_Start();
   816   000B0A  ECB8  F005         	call	_I2C2_Start	;wreg free
   817   000B0E                     
   818                           ;main.c: 437:  checkAck = I2C2_Send(0x50 << 1);
   819   000B0E  0EA0               	movlw	160
   820   000B10  EC70  F005         	call	_I2C2_Send
   821   000B14  6E36               	movwf	_checkAck^0,c
   822   000B16                     
   823                           ;main.c: 438:  I2C2_Send((address >> 8) & 0xFF);
   824   000B16  500E               	movf	(writeByteAT24_EEPROM@address+1)^0,w,c
   825   000B18  EC70  F005         	call	_I2C2_Send
   826   000B1C                     
   827                           ;main.c: 439:  I2C2_Send(address & 0xFF);
   828   000B1C  500D               	movf	writeByteAT24_EEPROM@address^0,w,c
   829   000B1E  EC70  F005         	call	_I2C2_Send
   830   000B22                     
   831                           ;main.c: 440:  I2C2_Send(data);
   832   000B22  500F               	movf	writeByteAT24_EEPROM@data^0,w,c
   833   000B24  EC70  F005         	call	_I2C2_Send
   834                           
   835                           ;main.c: 441:  I2C2_Stop();
   836   000B28  ECAE  F005         	call	_I2C2_Stop	;wreg free
   837   000B2C  0012               	return		;funcret
   838   000B2E                     __end_of_writeByteAT24_EEPROM:
   839                           	callstack 0
   840                           
   841 ;; *************** function _I2C2_Stop *****************
   842 ;; Defined at:
   843 ;;		line 82 in file "i2c.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		None
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   857 ;;      Params:         0       0       0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0       0       0
   860 ;;      Totals:         0       0       0       0       0       0       0
   861 ;;Total ram usage:        0 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 2
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_writeByteAT24_EEPROM
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text4
   872   000B5C                     __ptext4:
   873                           	callstack 0
   874   000B5C                     _I2C2_Stop:
   875                           	callstack 25
   876   000B5C                     
   877                           ;i2c.c: 83:  SSP1CON2bits.PEN = 1;
   878   000B5C  84C5               	bsf	197,2,c	;volatile
   879   000B5E                     l201:
   880   000B5E  A69E               	btfss	158,3,c	;volatile
   881   000B60  EFB4  F005         	goto	u421
   882   000B64  EFB6  F005         	goto	u420
   883   000B68                     u421:
   884   000B68  EFAF  F005         	goto	l201
   885   000B6C                     u420:
   886   000B6C                     
   887                           ;i2c.c: 85:  PIR1bits.SSP1IF = 0;
   888   000B6C  969E               	bcf	158,3,c	;volatile
   889   000B6E  0012               	return		;funcret
   890   000B70                     __end_of_I2C2_Stop:
   891                           	callstack 0
   892                           
   893 ;; *************** function _I2C2_Start *****************
   894 ;; Defined at:
   895 ;;		line 51 in file "i2c.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		None
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   909 ;;      Params:         0       0       0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0       0       0
   912 ;;      Totals:         0       0       0       0       0       0       0
   913 ;;Total ram usage:        0 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 2
   916 ;; This function calls:
   917 ;;		Nothing
   918 ;; This function is called by:
   919 ;;		_writeByteAT24_EEPROM
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text5
   924   000B70                     __ptext5:
   925                           	callstack 0
   926   000B70                     _I2C2_Start:
   927                           	callstack 25
   928   000B70                     
   929                           ;i2c.c: 52:  SSP1CON2bits.SEN = 1;
   930   000B70  80C5               	bsf	197,0,c	;volatile
   931   000B72                     l189:
   932   000B72  A69E               	btfss	158,3,c	;volatile
   933   000B74  EFBE  F005         	goto	u391
   934   000B78  EFC0  F005         	goto	u390
   935   000B7C                     u391:
   936   000B7C  EFB9  F005         	goto	l189
   937   000B80                     u390:
   938   000B80                     
   939                           ;i2c.c: 54:  PIR1bits.SSP1IF = 0;
   940   000B80  969E               	bcf	158,3,c	;volatile
   941   000B82  0012               	return		;funcret
   942   000B84                     __end_of_I2C2_Start:
   943                           	callstack 0
   944                           
   945 ;; *************** function _I2C2_Send *****************
   946 ;; Defined at:
   947 ;;		line 131 in file "i2c.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  BYTE            1    wreg     unsigned char 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  BYTE            1   11[COMRAM] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      unsigned char 
   954 ;; Registers used:
   955 ;;		wreg
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   961 ;;      Params:         0       0       0       0       0       0       0
   962 ;;      Locals:         1       0       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0
   964 ;;      Totals:         1       0       0       0       0       0       0
   965 ;;Total ram usage:        1 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 2
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_writeByteAT24_EEPROM
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text6
   976   000AE0                     __ptext6:
   977                           	callstack 0
   978   000AE0                     _I2C2_Send:
   979                           	callstack 25
   980                           
   981                           ;incstack = 0
   982                           ;I2C2_Send@BYTE stored from wreg
   983   000AE0  6E0C               	movwf	I2C2_Send@BYTE^0,c
   984   000AE2                     
   985                           ;i2c.c: 132:  SSP1BUF = BYTE;
   986   000AE2  C00C  FFC9         	movff	I2C2_Send@BYTE,4041	;volatile
   987   000AE6                     l219:
   988   000AE6  A69E               	btfss	158,3,c	;volatile
   989   000AE8  EF78  F005         	goto	u401
   990   000AEC  EF7A  F005         	goto	u400
   991   000AF0                     u401:
   992   000AF0  EF73  F005         	goto	l219
   993   000AF4                     u400:
   994   000AF4                     
   995                           ;i2c.c: 134:  PIR1bits.SSP1IF = 0;
   996   000AF4  969E               	bcf	158,3,c	;volatile
   997                           
   998                           ;i2c.c: 135:  return SSP1CON2bits.ACKSTAT;
   999   000AF6  BCC5               	btfsc	197,6,c	;volatile
  1000   000AF8  EF80  F005         	goto	u411
  1001   000AFC  EF83  F005         	goto	u410
  1002   000B00                     u411:
  1003   000B00  0E01               	movlw	1
  1004   000B02  EF84  F005         	goto	u416
  1005   000B06                     u410:
  1006   000B06  0E00               	movlw	0
  1007   000B08                     u416:
  1008   000B08  0012               	return		;funcret
  1009   000B0A                     __end_of_I2C2_Send:
  1010                           	callstack 0
  1011                           
  1012 ;; *************** function _EEPROM_Write *****************
  1013 ;; Defined at:
  1014 ;;		line 485 in file "main.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  addr            1    wreg     unsigned char 
  1017 ;;  eep_data        1   11[COMRAM] unsigned char 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  addr            1   12[COMRAM] unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1029 ;;      Params:         1       0       0       0       0       0       0
  1030 ;;      Locals:         1       0       0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0
  1032 ;;      Totals:         2       0       0       0       0       0       0
  1033 ;;Total ram usage:        2 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 2
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_writeDataToEEPROM
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text7
  1044   000A7E                     __ptext7:
  1045                           	callstack 0
  1046   000A7E                     _EEPROM_Write:
  1047                           	callstack 26
  1048                           
  1049                           ;incstack = 0
  1050                           ;EEPROM_Write@addr stored from wreg
  1051   000A7E  6E0D               	movwf	EEPROM_Write@addr^0,c
  1052   000A80                     
  1053                           ;main.c: 486:      EEADR = addr & 0xFF;
  1054   000A80  C00D  FFA9         	movff	EEPROM_Write@addr,4009	;volatile
  1055   000A84                     
  1056                           ;main.c: 487:      EEDATA = eep_data;
  1057   000A84  C00C  FFA8         	movff	EEPROM_Write@eep_data,4008	;volatile
  1058   000A88                     
  1059                           ;main.c: 489:      EECON1bits.EEPGD = 0;
  1060   000A88  9EA6               	bcf	166,7,c	;volsfr
  1061   000A8A                     
  1062                           ;main.c: 490:      EECON1bits.CFGS = 0;
  1063   000A8A  9CA6               	bcf	166,6,c	;volsfr
  1064   000A8C                     
  1065                           ;main.c: 491:      EECON1bits.WREN = 1;
  1066   000A8C  84A6               	bsf	166,2,c	;volsfr
  1067   000A8E                     
  1068                           ;main.c: 493:      INTCONbits.GIE = 0;
  1069   000A8E  9EF2               	bcf	242,7,c	;volatile
  1070   000A90                     
  1071                           ;main.c: 496:      EECON2 = 0x55;
  1072   000A90  0E55               	movlw	85
  1073   000A92  6EA7               	movwf	167,c	;volsfr
  1074   000A94                     
  1075                           ;main.c: 497:      EECON2 = 0xAA;
  1076   000A94  0EAA               	movlw	170
  1077   000A96  6EA7               	movwf	167,c	;volsfr
  1078   000A98                     
  1079                           ;main.c: 498:      EECON1bits.WR = 1;
  1080   000A98  82A6               	bsf	166,1,c	;volsfr
  1081   000A9A                     
  1082                           ;main.c: 500:      INTCONbits.GIE = 1;
  1083   000A9A  8EF2               	bsf	242,7,c	;volatile
  1084   000A9C                     
  1085                           ;main.c: 502:      PIE2bits.EEIE = 1;
  1086   000A9C  88A0               	bsf	160,4,c	;volatile
  1087   000A9E                     l152:
  1088   000A9E  A8A1               	btfss	161,4,c	;volatile
  1089   000AA0  EF54  F005         	goto	u441
  1090   000AA4  EF56  F005         	goto	u440
  1091   000AA8                     u441:
  1092   000AA8  EF4F  F005         	goto	l152
  1093   000AAC                     u440:
  1094   000AAC                     
  1095                           ;main.c: 505:      PIR2bits.EEIF = 0;
  1096   000AAC  98A1               	bcf	161,4,c	;volatile
  1097   000AAE  0012               	return		;funcret
  1098   000AB0                     __end_of_EEPROM_Write:
  1099                           	callstack 0
  1100                           
  1101 ;; *************** function _EEPROM_Read *****************
  1102 ;; Defined at:
  1103 ;;		line 513 in file "main.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  addr            1    wreg     unsigned char 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  addr            1   11[COMRAM] unsigned char 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      unsigned char 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1117 ;;      Params:         0       0       0       0       0       0       0
  1118 ;;      Locals:         1       0       0       0       0       0       0
  1119 ;;      Temps:          0       0       0       0       0       0       0
  1120 ;;      Totals:         1       0       0       0       0       0       0
  1121 ;;Total ram usage:        1 bytes
  1122 ;; Hardware stack levels used: 1
  1123 ;; Hardware stack levels required when called: 2
  1124 ;; This function calls:
  1125 ;;		Nothing
  1126 ;; This function is called by:
  1127 ;;		_writeDataToEEPROM
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text8
  1132   000B96                     __ptext8:
  1133                           	callstack 0
  1134   000B96                     _EEPROM_Read:
  1135                           	callstack 26
  1136                           
  1137                           ;incstack = 0
  1138                           ;EEPROM_Read@addr stored from wreg
  1139   000B96  6E0C               	movwf	EEPROM_Read@addr^0,c
  1140   000B98                     
  1141                           ;main.c: 514:  EEADR = addr;
  1142   000B98  C00C  FFA9         	movff	EEPROM_Read@addr,4009	;volatile
  1143   000B9C                     
  1144                           ;main.c: 515:  EECON1bits.EEPGD = 0;
  1145   000B9C  9EA6               	bcf	166,7,c	;volsfr
  1146   000B9E                     
  1147                           ;main.c: 516:  EECON1bits.RD = 1;
  1148   000B9E  80A6               	bsf	166,0,c	;volsfr
  1149   000BA0                     
  1150                           ;main.c: 518:  return EEDATA;
  1151   000BA0  50A8               	movf	168,w,c	;volatile
  1152   000BA2  0012               	return		;funcret
  1153   000BA4                     __end_of_EEPROM_Read:
  1154                           	callstack 0
  1155                           
  1156 ;; *************** function _sendResponse *****************
  1157 ;; Defined at:
  1158 ;;		line 450 in file "main.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  index           2   13[COMRAM] unsigned int 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1172 ;;      Params:         0       0       0       0       0       0       0
  1173 ;;      Locals:         2       0       0       0       0       0       0
  1174 ;;      Temps:          1       0       0       0       0       0       0
  1175 ;;      Totals:         3       0       0       0       0       0       0
  1176 ;;Total ram usage:        3 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 3
  1179 ;; This function calls:
  1180 ;;		_UART_TransmitChar
  1181 ;; This function is called by:
  1182 ;;		_createResponse
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text9
  1187   00087C                     __ptext9:
  1188                           	callstack 0
  1189   00087C                     _sendResponse:
  1190                           	callstack 26
  1191   00087C                     
  1192                           ;main.c: 455:  UART_TransmitChar(0x3A);
  1193   00087C  0E3A               	movlw	58
  1194   00087E  ECA3  F005         	call	_UART_TransmitChar
  1195   000882                     
  1196                           ;main.c: 456:  _delay((unsigned long)((10)*(64000000/4000.0)));
  1197   000882  0ED0               	movlw	208
  1198   000884  6E0D               	movwf	??_sendResponse^0,c
  1199   000886  0ECA               	movlw	202
  1200   000888                     u787:
  1201   000888  2EE8               	decfsz	wreg,f,c
  1202   00088A  D7FE               	bra	u787
  1203   00088C  2E0D               	decfsz	??_sendResponse^0,f,c
  1204   00088E  D7FC               	bra	u787
  1205   000890                     
  1206                           ;main.c: 457:  UART_TransmitChar(0x23);
  1207   000890  0E23               	movlw	35
  1208   000892  ECA3  F005         	call	_UART_TransmitChar
  1209   000896                     
  1210                           ;main.c: 458:  _delay((unsigned long)((10)*(64000000/4000.0)));
  1211   000896  0ED0               	movlw	208
  1212   000898  6E0D               	movwf	??_sendResponse^0,c
  1213   00089A  0ECA               	movlw	202
  1214   00089C                     u797:
  1215   00089C  2EE8               	decfsz	wreg,f,c
  1216   00089E  D7FE               	bra	u797
  1217   0008A0  2E0D               	decfsz	??_sendResponse^0,f,c
  1218   0008A2  D7FC               	bra	u797
  1219                           
  1220                           ;main.c: 460:  for (index = 0; index < 10; index++)
  1221   0008A4  0E00               	movlw	0
  1222   0008A6  6E0F               	movwf	(sendResponse@index+1)^0,c
  1223   0008A8  0E00               	movlw	0
  1224   0008AA  6E0E               	movwf	sendResponse@index^0,c
  1225   0008AC                     l1342:
  1226                           
  1227                           ;main.c: 461:  {;main.c: 462:   UART_TransmitChar(responseBuffer[index]);
  1228   0008AC  500E               	movf	sendResponse@index^0,w,c
  1229   0008AE  0F1B               	addlw	low _responseBuffer
  1230   0008B0  6ED9               	movwf	fsr2l,c
  1231   0008B2  6ADA               	clrf	fsr2h,c
  1232   0008B4  50DF               	movf	indf2,w,c
  1233   0008B6  ECA3  F005         	call	_UART_TransmitChar
  1234   0008BA                     
  1235                           ;main.c: 463:   _delay((unsigned long)((10)*(64000000/4000.0)));
  1236   0008BA  0ED0               	movlw	208
  1237   0008BC  6E0D               	movwf	??_sendResponse^0,c
  1238   0008BE  0ECA               	movlw	202
  1239   0008C0                     u807:
  1240   0008C0  2EE8               	decfsz	wreg,f,c
  1241   0008C2  D7FE               	bra	u807
  1242   0008C4  2E0D               	decfsz	??_sendResponse^0,f,c
  1243   0008C6  D7FC               	bra	u807
  1244   0008C8                     
  1245                           ;main.c: 464:  }
  1246   0008C8  4A0E               	infsnz	sendResponse@index^0,f,c
  1247   0008CA  2A0F               	incf	(sendResponse@index+1)^0,f,c
  1248   0008CC  500F               	movf	(sendResponse@index+1)^0,w,c
  1249   0008CE  E109               	bnz	u490
  1250   0008D0  0E0A               	movlw	10
  1251   0008D2  5C0E               	subwf	sendResponse@index^0,w,c
  1252   0008D4  A0D8               	btfss	status,0,c
  1253   0008D6  EF6F  F004         	goto	u491
  1254   0008DA  EF71  F004         	goto	u490
  1255   0008DE                     u491:
  1256   0008DE  EF56  F004         	goto	l1342
  1257   0008E2                     u490:
  1258   0008E2                     
  1259                           ;main.c: 467:  UART_TransmitChar(0x0D);
  1260   0008E2  0E0D               	movlw	13
  1261   0008E4  ECA3  F005         	call	_UART_TransmitChar
  1262   0008E8                     
  1263                           ;main.c: 468:  _delay((unsigned long)((10)*(64000000/4000.0)));
  1264   0008E8  0ED0               	movlw	208
  1265   0008EA  6E0D               	movwf	??_sendResponse^0,c
  1266   0008EC  0ECA               	movlw	202
  1267   0008EE                     u817:
  1268   0008EE  2EE8               	decfsz	wreg,f,c
  1269   0008F0  D7FE               	bra	u817
  1270   0008F2  2E0D               	decfsz	??_sendResponse^0,f,c
  1271   0008F4  D7FC               	bra	u817
  1272   0008F6                     
  1273                           ;main.c: 469:  UART_TransmitChar(0x0A);
  1274   0008F6  0E0A               	movlw	10
  1275   0008F8  ECA3  F005         	call	_UART_TransmitChar
  1276   0008FC                     
  1277                           ;main.c: 473:  index = 50;
  1278   0008FC  0E00               	movlw	0
  1279   0008FE  6E0F               	movwf	(sendResponse@index+1)^0,c
  1280   000900  0E32               	movlw	50
  1281   000902  6E0E               	movwf	sendResponse@index^0,c
  1282                           
  1283                           ;main.c: 474:  while(index > 0){
  1284   000904  EF8D  F004         	goto	l1362
  1285   000908                     l1358:
  1286                           
  1287                           ;main.c: 475:       requestBuffer[50 - index] = 0xFF;
  1288   000908  500E               	movf	sendResponse@index^0,w,c
  1289   00090A  08FA               	sublw	low (_requestBuffer+50)
  1290   00090C  6ED9               	movwf	fsr2l,c
  1291   00090E  6ADA               	clrf	fsr2h,c
  1292   000910  0EFF               	movlw	255
  1293   000912  6EDF               	movwf	indf2,c
  1294   000914                     
  1295                           ;main.c: 476:       index--;
  1296   000914  060E               	decf	sendResponse@index^0,f,c
  1297   000916  A0D8               	btfss	status,0,c
  1298   000918  060F               	decf	(sendResponse@index+1)^0,f,c
  1299   00091A                     l1362:
  1300                           
  1301                           ;main.c: 474:  while(index > 0){
  1302   00091A  500E               	movf	sendResponse@index^0,w,c
  1303   00091C  100F               	iorwf	(sendResponse@index+1)^0,w,c
  1304   00091E  A4D8               	btfss	status,2,c
  1305   000920  EF94  F004         	goto	u501
  1306   000924  EF96  F004         	goto	u500
  1307   000928                     u501:
  1308   000928  EF84  F004         	goto	l1358
  1309   00092C                     u500:
  1310   00092C  0012               	return		;funcret
  1311   00092E                     __end_of_sendResponse:
  1312                           	callstack 0
  1313                           
  1314 ;; *************** function _UART_TransmitChar *****************
  1315 ;; Defined at:
  1316 ;;		line 163 in file "main.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  data            1    wreg     unsigned char 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  data            1   11[COMRAM] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1330 ;;      Params:         0       0       0       0       0       0       0
  1331 ;;      Locals:         1       0       0       0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0       0       0
  1333 ;;      Totals:         1       0       0       0       0       0       0
  1334 ;;Total ram usage:        1 bytes
  1335 ;; Hardware stack levels used: 1
  1336 ;; Hardware stack levels required when called: 2
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_sendResponse
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text10
  1345   000B46                     __ptext10:
  1346                           	callstack 0
  1347   000B46                     _UART_TransmitChar:
  1348                           	callstack 26
  1349                           
  1350                           ;incstack = 0
  1351                           ;UART_TransmitChar@data stored from wreg
  1352   000B46  6E0C               	movwf	UART_TransmitChar@data^0,c
  1353   000B48                     l90:
  1354   000B48  A89E               	btfss	158,4,c	;volatile
  1355   000B4A  EFA9  F005         	goto	u431
  1356   000B4E  EFAB  F005         	goto	u430
  1357   000B52                     u431:
  1358   000B52  EFA4  F005         	goto	l90
  1359   000B56                     u430:
  1360   000B56                     
  1361                           ;main.c: 166:  TXREG = data;
  1362   000B56  C00C  FFAD         	movff	UART_TransmitChar@data,4013	;volatile
  1363   000B5A  0012               	return		;funcret
  1364   000B5C                     __end_of_UART_TransmitChar:
  1365                           	callstack 0
  1366                           
  1367 ;; *************** function _createPingResponse *****************
  1368 ;; Defined at:
  1369 ;;		line 339 in file "main.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, status,2
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1383 ;;      Params:         0       0       0       0       0       0       0
  1384 ;;      Locals:         0       0       0       0       0       0       0
  1385 ;;      Temps:          0       0       0       0       0       0       0
  1386 ;;      Totals:         0       0       0       0       0       0       0
  1387 ;;Total ram usage:        0 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; Hardware stack levels required when called: 2
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		_createResponse
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text11
  1398   000B84                     __ptext11:
  1399                           	callstack 0
  1400   000B84                     _createPingResponse:
  1401                           	callstack 27
  1402   000B84                     
  1403                           ;main.c: 341:  responseBuffer[0] = request_unit.DEVICE_ADDR;
  1404   000B84  C094  F01B         	movff	_request_unit,_responseBuffer
  1405                           
  1406                           ;main.c: 342:  responseBuffer[1] = request_unit.ORDER_CODE;
  1407   000B88  C095  F01C         	movff	_request_unit+1,_responseBuffer+1
  1408   000B8C                     
  1409                           ;main.c: 343:  responseBuffer[2] = 0x00;
  1410   000B8C  0E00               	movlw	0
  1411   000B8E  6E1D               	movwf	(_responseBuffer+2)^0,c
  1412                           
  1413                           ;main.c: 344:  responseBuffer[3] = 0x00;
  1414   000B90  0E00               	movlw	0
  1415   000B92  6E1E               	movwf	(_responseBuffer+3)^0,c
  1416   000B94  0012               	return		;funcret
  1417   000B96                     __end_of_createPingResponse:
  1418                           	callstack 0
  1419                           
  1420 ;; *************** function _UART_Init *****************
  1421 ;; Defined at:
  1422 ;;		line 94 in file "main.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  temp            4   21[COMRAM] float 
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2, status,0, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1436 ;;      Params:         0       0       0       0       0       0       0
  1437 ;;      Locals:         4       0       0       0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0       0       0
  1439 ;;      Totals:         4       0       0       0       0       0       0
  1440 ;;Total ram usage:        4 bytes
  1441 ;; Hardware stack levels used: 1
  1442 ;; Hardware stack levels required when called: 3
  1443 ;; This function calls:
  1444 ;;		___fltol
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text12
  1451   000A3E                     __ptext12:
  1452                           	callstack 0
  1453   000A3E                     _UART_Init:
  1454                           	callstack 27
  1455   000A3E                     
  1456                           ;main.c: 96:  float temp;;main.c: 98:   TRISC6 = 0;
  1457   000A3E  9C94               	bcf	3988,6,c	;volatile
  1458                           
  1459                           ;main.c: 99:   TRISC7 = 1;
  1460   000A40  8E94               	bsf	3988,7,c	;volatile
  1461                           
  1462                           ;main.c: 100:   ANSELCbits.ANSC7 = 0;
  1463   000A42  010F               	movlb	15	; () banked
  1464   000A44  9F3A               	bcf	58,7,b	;volatile
  1465                           
  1466                           ;main.c: 103:  INTCONbits.GIE = 1;
  1467   000A46  8EF2               	bsf	242,7,c	;volatile
  1468                           
  1469                           ;main.c: 104:  INTCONbits.PEIE = 1;
  1470   000A48  8CF2               	bsf	242,6,c	;volatile
  1471                           
  1472                           ;main.c: 105:  PIE1bits.RC1IE = 1;
  1473   000A4A  8A9D               	bsf	157,5,c	;volatile
  1474   000A4C                     
  1475                           ; BSR set to: 15
  1476                           ;main.c: 108:   TXSTA1 = 0x20;
  1477   000A4C  0E20               	movlw	32
  1478   000A4E  6EAC               	movwf	172,c	;volatile
  1479                           
  1480                           ;main.c: 109:   RCSTA1 = 0x90;
  1481   000A50  0E90               	movlw	144
  1482   000A52  6EAB               	movwf	171,c	;volatile
  1483                           
  1484                           ;main.c: 112:  temp = (((float)(64000000 / 64) / (float)9600) - 1);
  1485   000A54  0E55               	movlw	85
  1486   000A56  6E16               	movwf	UART_Init@temp^0,c
  1487   000A58  0E55               	movlw	85
  1488   000A5A  6E17               	movwf	(UART_Init@temp+1)^0,c
  1489   000A5C  0ECE               	movlw	206
  1490   000A5E  6E18               	movwf	(UART_Init@temp+2)^0,c
  1491   000A60  0E42               	movlw	66
  1492   000A62  6E19               	movwf	(UART_Init@temp+3)^0,c
  1493   000A64                     
  1494                           ; BSR set to: 15
  1495                           ;main.c: 113:  SPBRG1 = (int)temp;
  1496   000A64  C016  F00C         	movff	UART_Init@temp,___fltol@f1
  1497   000A68  C017  F00D         	movff	UART_Init@temp+1,___fltol@f1+1
  1498   000A6C  C018  F00E         	movff	UART_Init@temp+2,___fltol@f1+2
  1499   000A70  C019  F00F         	movff	UART_Init@temp+3,___fltol@f1+3
  1500   000A74  ECBB  F003         	call	___fltol	;wreg free
  1501   000A78  500C               	movf	?___fltol^0,w,c
  1502   000A7A  6EAF               	movwf	175,c	;volatile
  1503   000A7C  0012               	return		;funcret
  1504   000A7E                     __end_of_UART_Init:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function ___fltol *****************
  1508 ;; Defined at:
  1509 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  f1              4   11[COMRAM] void 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  exp1            1   20[COMRAM] unsigned char 
  1514 ;;  sign1           1   19[COMRAM] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  4   11[COMRAM] long 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1524 ;;      Params:         4       0       0       0       0       0       0
  1525 ;;      Locals:         2       0       0       0       0       0       0
  1526 ;;      Temps:          4       0       0       0       0       0       0
  1527 ;;      Totals:        10       0       0       0       0       0       0
  1528 ;;Total ram usage:       10 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 2
  1531 ;; This function calls:
  1532 ;;		Nothing
  1533 ;; This function is called by:
  1534 ;;		_UART_Init
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text13
  1539   000776                     __ptext13:
  1540                           	callstack 0
  1541   000776                     ___fltol:
  1542                           	callstack 27
  1543   000776  340E               	rlcf	(___fltol@f1+2)^0,w,c
  1544   000778  340F               	rlcf	(___fltol@f1+3)^0,w,c
  1545   00077A  6E15               	movwf	___fltol@exp1^0,c
  1546   00077C  5015               	movf	___fltol@exp1^0,w,c
  1547   00077E  A4D8               	btfss	status,2,c
  1548   000780  EFC4  F003         	goto	u511
  1549   000784  EFC6  F003         	goto	u510
  1550   000788                     u511:
  1551   000788  EFD0  F003         	goto	l1370
  1552   00078C                     u510:
  1553   00078C                     l1366:
  1554   00078C  0E00               	movlw	0
  1555   00078E  6E0C               	movwf	?___fltol^0,c
  1556   000790  0E00               	movlw	0
  1557   000792  6E0D               	movwf	(?___fltol+1)^0,c
  1558   000794  0E00               	movlw	0
  1559   000796  6E0E               	movwf	(?___fltol+2)^0,c
  1560   000798  0E00               	movlw	0
  1561   00079A  6E0F               	movwf	(?___fltol+3)^0,c
  1562   00079C  EF3D  F004         	goto	l528
  1563   0007A0                     l1370:
  1564   0007A0  C00C  F010         	movff	___fltol@f1,??___fltol
  1565   0007A4  C00D  F011         	movff	___fltol@f1+1,??___fltol+1
  1566   0007A8  C00E  F012         	movff	___fltol@f1+2,??___fltol+2
  1567   0007AC  C00F  F013         	movff	___fltol@f1+3,??___fltol+3
  1568   0007B0  0E20               	movlw	32
  1569   0007B2  EFE0  F003         	goto	u520
  1570   0007B6                     u525:
  1571   0007B6  90D8               	bcf	status,0,c
  1572   0007B8  3213               	rrcf	(??___fltol+3)^0,f,c
  1573   0007BA  3212               	rrcf	(??___fltol+2)^0,f,c
  1574   0007BC  3211               	rrcf	(??___fltol+1)^0,f,c
  1575   0007BE  3210               	rrcf	??___fltol^0,f,c
  1576   0007C0                     u520:
  1577   0007C0  2EE8               	decfsz	wreg,f,c
  1578   0007C2  EFDB  F003         	goto	u525
  1579   0007C6  5010               	movf	??___fltol^0,w,c
  1580   0007C8  6E14               	movwf	___fltol@sign1^0,c
  1581   0007CA  8E0E               	bsf	(___fltol@f1+2)^0,7,c
  1582   0007CC  0EFF               	movlw	255
  1583   0007CE  160C               	andwf	___fltol@f1^0,f,c
  1584   0007D0  0EFF               	movlw	255
  1585   0007D2  160D               	andwf	(___fltol@f1+1)^0,f,c
  1586   0007D4  0EFF               	movlw	255
  1587   0007D6  160E               	andwf	(___fltol@f1+2)^0,f,c
  1588   0007D8  0E00               	movlw	0
  1589   0007DA  160F               	andwf	(___fltol@f1+3)^0,f,c
  1590   0007DC  0E96               	movlw	150
  1591   0007DE  5E15               	subwf	___fltol@exp1^0,f,c
  1592   0007E0  BE15               	btfsc	___fltol@exp1^0,7,c
  1593   0007E2  EFF7  F003         	goto	u530
  1594   0007E6  EFF5  F003         	goto	u531
  1595   0007EA                     u531:
  1596   0007EA  EF0D  F004         	goto	l1390
  1597   0007EE                     u530:
  1598   0007EE  5015               	movf	___fltol@exp1^0,w,c
  1599   0007F0  0A80               	xorlw	128
  1600   0007F2  0F97               	addlw	151
  1601   0007F4  B0D8               	btfsc	status,0,c
  1602   0007F6  EFFF  F003         	goto	u541
  1603   0007FA  EF01  F004         	goto	u540
  1604   0007FE                     u541:
  1605   0007FE  EF03  F004         	goto	l1386
  1606   000802                     u540:
  1607   000802  EFC6  F003         	goto	l1366
  1608   000806                     l1386:
  1609   000806  90D8               	bcf	status,0,c
  1610   000808  320F               	rrcf	(___fltol@f1+3)^0,f,c
  1611   00080A  320E               	rrcf	(___fltol@f1+2)^0,f,c
  1612   00080C  320D               	rrcf	(___fltol@f1+1)^0,f,c
  1613   00080E  320C               	rrcf	___fltol@f1^0,f,c
  1614   000810  3E15               	incfsz	___fltol@exp1^0,f,c
  1615   000812  EF03  F004         	goto	l1386
  1616   000816  EF25  F004         	goto	l1400
  1617   00081A                     l1390:
  1618   00081A  0E1F               	movlw	31
  1619   00081C  6415               	cpfsgt	___fltol@exp1^0,c
  1620   00081E  EF13  F004         	goto	u551
  1621   000822  EF15  F004         	goto	u550
  1622   000826                     u551:
  1623   000826  EF1D  F004         	goto	l1398
  1624   00082A                     u550:
  1625   00082A  EFC6  F003         	goto	l1366
  1626   00082E                     l1396:
  1627   00082E  90D8               	bcf	status,0,c
  1628   000830  360C               	rlcf	___fltol@f1^0,f,c
  1629   000832  360D               	rlcf	(___fltol@f1+1)^0,f,c
  1630   000834  360E               	rlcf	(___fltol@f1+2)^0,f,c
  1631   000836  360F               	rlcf	(___fltol@f1+3)^0,f,c
  1632   000838  0615               	decf	___fltol@exp1^0,f,c
  1633   00083A                     l1398:
  1634   00083A  5015               	movf	___fltol@exp1^0,w,c
  1635   00083C  A4D8               	btfss	status,2,c
  1636   00083E  EF23  F004         	goto	u561
  1637   000842  EF25  F004         	goto	u560
  1638   000846                     u561:
  1639   000846  EF17  F004         	goto	l1396
  1640   00084A                     u560:
  1641   00084A                     l1400:
  1642   00084A  5014               	movf	___fltol@sign1^0,w,c
  1643   00084C  B4D8               	btfsc	status,2,c
  1644   00084E  EF2B  F004         	goto	u571
  1645   000852  EF2D  F004         	goto	u570
  1646   000856                     u571:
  1647   000856  EF35  F004         	goto	l1404
  1648   00085A                     u570:
  1649   00085A  1E0F               	comf	(___fltol@f1+3)^0,f,c
  1650   00085C  1E0E               	comf	(___fltol@f1+2)^0,f,c
  1651   00085E  1E0D               	comf	(___fltol@f1+1)^0,f,c
  1652   000860  6C0C               	negf	___fltol@f1^0,c
  1653   000862  0E00               	movlw	0
  1654   000864  220D               	addwfc	(___fltol@f1+1)^0,f,c
  1655   000866  220E               	addwfc	(___fltol@f1+2)^0,f,c
  1656   000868  220F               	addwfc	(___fltol@f1+3)^0,f,c
  1657   00086A                     l1404:
  1658   00086A  C00C  F00C         	movff	___fltol@f1,?___fltol
  1659   00086E  C00D  F00D         	movff	___fltol@f1+1,?___fltol+1
  1660   000872  C00E  F00E         	movff	___fltol@f1+2,?___fltol+2
  1661   000876  C00F  F00F         	movff	___fltol@f1+3,?___fltol+3
  1662   00087A                     l528:
  1663   00087A  0012               	return		;funcret
  1664   00087C                     __end_of___fltol:
  1665                           	callstack 0
  1666                           
  1667 ;; *************** function _I2C2_Init *****************
  1668 ;; Defined at:
  1669 ;;		line 20 in file "i2c.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1683 ;;      Params:         0       0       0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0
  1686 ;;      Totals:         0       0       0       0       0       0       0
  1687 ;;Total ram usage:        0 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 2
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text14
  1698   000B2E                     __ptext14:
  1699                           	callstack 0
  1700   000B2E                     _I2C2_Init:
  1701                           	callstack 28
  1702   000B2E                     
  1703                           ;i2c.c: 21:     TRISCbits.RC4 = 1;
  1704   000B2E  8894               	bsf	148,4,c	;volatile
  1705                           
  1706                           ;i2c.c: 22:     TRISCbits.RC3 = 1;
  1707   000B30  8694               	bsf	148,3,c	;volatile
  1708                           
  1709                           ;i2c.c: 25:     ANSELCbits.ANSC3 = 0;
  1710   000B32  010F               	movlb	15	; () banked
  1711   000B34  973A               	bcf	58,3,b	;volatile
  1712                           
  1713                           ;i2c.c: 26:     ANSELCbits.ANSC4 = 0;
  1714   000B36  993A               	bcf	58,4,b	;volatile
  1715   000B38                     
  1716                           ; BSR set to: 15
  1717                           ;i2c.c: 28:     SSP1STAT = 0b10000000;
  1718   000B38  0E80               	movlw	128
  1719   000B3A  6EC7               	movwf	199,c	;volatile
  1720                           
  1721                           ;i2c.c: 37:  SSP1CON1 = 0b00101000;
  1722   000B3C  0E28               	movlw	40
  1723   000B3E  6EC6               	movwf	198,c	;volatile
  1724                           
  1725                           ;i2c.c: 38:     SSP1ADD = 159u;
  1726   000B40  0E9F               	movlw	159
  1727   000B42  6EC8               	movwf	200,c	;volatile
  1728   000B44                     
  1729                           ; BSR set to: 15
  1730   000B44  0012               	return		;funcret
  1731   000B46                     __end_of_I2C2_Init:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function _isr *****************
  1735 ;; Defined at:
  1736 ;;		line 175 in file "main.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  receivedChar    1   10[COMRAM] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1750 ;;      Params:         0       0       0       0       0       0       0
  1751 ;;      Locals:         1       0       0       0       0       0       0
  1752 ;;      Temps:          4       0       0       0       0       0       0
  1753 ;;      Totals:         5       0       0       0       0       0       0
  1754 ;;Total ram usage:        5 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; Hardware stack levels required when called: 1
  1757 ;; This function calls:
  1758 ;;		_processRequest
  1759 ;; This function is called by:
  1760 ;;		Interrupt level 2
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	intcode
  1765   000008                     __pintcode:
  1766                           	callstack 0
  1767   000008                     _isr:
  1768                           	callstack 25
  1769                           
  1770                           ; BSR set to: 15
  1771                           ;incstack = 0
  1772   000008  8237               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1773   00000A  CFE1 F007          	movff	fsr1l,??_isr
  1774   00000E  CFE2 F008          	movff	fsr1h,??_isr+1
  1775   000012  CFD9 F009          	movff	fsr2l,??_isr+2
  1776   000016  CFDA F00A          	movff	fsr2h,??_isr+3
  1777   00001A                     
  1778                           ;main.c: 178:  if (PIR1bits.RC1IF)
  1779   00001A  AA9E               	btfss	158,5,c	;volatile
  1780   00001C  EF12  F000         	goto	i2u60_41
  1781   000020  EF14  F000         	goto	i2u60_40
  1782   000024                     i2u60_41:
  1783   000024  EFAA  F000         	goto	i2l110
  1784   000028                     i2u60_40:
  1785   000028                     
  1786                           ;main.c: 179:  {;main.c: 180:   unsigned char receivedChar = RCREG;
  1787   000028  CFAE F00B          	movff	4014,isr@receivedChar	;volatile
  1788                           
  1789                           ;main.c: 181:   PIE1bits.RC1IE = 0;
  1790   00002C  9A9D               	bcf	157,5,c	;volatile
  1791   00002E                     
  1792                           ;main.c: 186:   if (!receiveData.receiving)
  1793   00002E  0100               	movlb	0	; () banked
  1794   000030  5193               	movf	(_receiveData+51)& (0+255),w,b
  1795   000032  A4D8               	btfss	status,2,c
  1796   000034  EF1E  F000         	goto	i2u61_41
  1797   000038  EF20  F000         	goto	i2u61_40
  1798   00003C                     i2u61_41:
  1799   00003C  EF4C  F000         	goto	i2l1462
  1800   000040                     i2u61_40:
  1801   000040                     
  1802                           ; BSR set to: 0
  1803                           ;main.c: 187:   {;main.c: 190:    if ((receivedChar == 0x3A) && (start_sequence_flag == 
      +                          0x00))
  1804   000040  0E3A               	movlw	58
  1805   000042  180B               	xorwf	isr@receivedChar^0,w,c
  1806   000044  A4D8               	btfss	status,2,c
  1807   000046  EF27  F000         	goto	i2u62_41
  1808   00004A  EF29  F000         	goto	i2u62_40
  1809   00004E                     i2u62_41:
  1810   00004E  EF33  F000         	goto	i2l100
  1811   000052                     i2u62_40:
  1812   000052                     
  1813                           ; BSR set to: 0
  1814   000052  5028               	movf	_start_sequence_flag^0,w,c
  1815   000054  A4D8               	btfss	status,2,c
  1816   000056  EF2F  F000         	goto	i2u63_41
  1817   00005A  EF31  F000         	goto	i2u63_40
  1818   00005E                     i2u63_41:
  1819   00005E  EF33  F000         	goto	i2l100
  1820   000062                     i2u63_40:
  1821   000062                     
  1822                           ; BSR set to: 0
  1823                           ;main.c: 191:    {;main.c: 193:     start_sequence_flag ^= 1;
  1824   000062  0E01               	movlw	1
  1825   000064  1A28               	xorwf	_start_sequence_flag^0,f,c
  1826   000066                     i2l100:
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;main.c: 197:    if ((receivedChar == 0x23) && (start_sequence_flag == 0x01))
  1830   000066  0E23               	movlw	35
  1831   000068  180B               	xorwf	isr@receivedChar^0,w,c
  1832   00006A  A4D8               	btfss	status,2,c
  1833   00006C  EF3A  F000         	goto	i2u64_41
  1834   000070  EF3C  F000         	goto	i2u64_40
  1835   000074                     i2u64_41:
  1836   000074  EFA9  F000         	goto	i2l1502
  1837   000078                     i2u64_40:
  1838   000078                     
  1839                           ; BSR set to: 0
  1840   000078  0428               	decf	_start_sequence_flag^0,w,c
  1841   00007A  A4D8               	btfss	status,2,c
  1842   00007C  EF42  F000         	goto	i2u65_41
  1843   000080  EF44  F000         	goto	i2u65_40
  1844   000084                     i2u65_41:
  1845   000084  EFA9  F000         	goto	i2l1502
  1846   000088                     i2u65_40:
  1847   000088                     
  1848                           ; BSR set to: 0
  1849                           ;main.c: 198:    {;main.c: 200:     receiveData.receiving = 0x01;
  1850   000088  0E01               	movlw	1
  1851   00008A  6F93               	movwf	(_receiveData+51)& (0+255),b
  1852                           
  1853                           ;main.c: 201:     receiveData.index = 0;
  1854   00008C  0E00               	movlw	0
  1855   00008E  6F92               	movwf	(_receiveData+50)& (0+255),b
  1856   000090                     
  1857                           ; BSR set to: 0
  1858                           ;main.c: 204:     start_sequence_flag ^= 1;
  1859   000090  0E01               	movlw	1
  1860   000092  1A28               	xorwf	_start_sequence_flag^0,f,c
  1861   000094  EFA9  F000         	goto	i2l1502
  1862   000098                     i2l1462:
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;main.c: 208:   {;main.c: 211:    if ((receivedChar == 0x0D) && (end_sequence_flag == 0x
      +                          00))
  1866   000098  0E0D               	movlw	13
  1867   00009A  180B               	xorwf	isr@receivedChar^0,w,c
  1868   00009C  A4D8               	btfss	status,2,c
  1869   00009E  EF53  F000         	goto	i2u66_41
  1870   0000A2  EF55  F000         	goto	i2u66_40
  1871   0000A6                     i2u66_41:
  1872   0000A6  EF61  F000         	goto	i2l1468
  1873   0000AA                     i2u66_40:
  1874   0000AA                     
  1875                           ; BSR set to: 0
  1876   0000AA  5027               	movf	_end_sequence_flag^0,w,c
  1877   0000AC  A4D8               	btfss	status,2,c
  1878   0000AE  EF5B  F000         	goto	i2u67_41
  1879   0000B2  EF5D  F000         	goto	i2u67_40
  1880   0000B6                     i2u67_41:
  1881   0000B6  EF61  F000         	goto	i2l1468
  1882   0000BA                     i2u67_40:
  1883   0000BA                     
  1884                           ; BSR set to: 0
  1885                           ;main.c: 212:    {;main.c: 213:     end_sequence_flag = 0x01;
  1886   0000BA  0E01               	movlw	1
  1887   0000BC  6E27               	movwf	_end_sequence_flag^0,c
  1888                           
  1889                           ;main.c: 214:    }
  1890   0000BE  EFA9  F000         	goto	i2l1502
  1891   0000C2                     i2l1468:
  1892                           
  1893                           ; BSR set to: 0
  1894   0000C2  0E0A               	movlw	10
  1895   0000C4  180B               	xorwf	isr@receivedChar^0,w,c
  1896   0000C6  A4D8               	btfss	status,2,c
  1897   0000C8  EF68  F000         	goto	i2u68_41
  1898   0000CC  EF6A  F000         	goto	i2u68_40
  1899   0000D0                     i2u68_41:
  1900   0000D0  EF85  F000         	goto	i2l1486
  1901   0000D4                     i2u68_40:
  1902   0000D4                     
  1903                           ; BSR set to: 0
  1904   0000D4  0427               	decf	_end_sequence_flag^0,w,c
  1905   0000D6  A4D8               	btfss	status,2,c
  1906   0000D8  EF70  F000         	goto	i2u69_41
  1907   0000DC  EF72  F000         	goto	i2u69_40
  1908   0000E0                     i2u69_41:
  1909   0000E0  EF85  F000         	goto	i2l1486
  1910   0000E4                     i2u69_40:
  1911   0000E4                     
  1912                           ; BSR set to: 0
  1913                           ;main.c: 216:    {;main.c: 219:     requestBuffer[receiveData.index++] = 0x00;
  1914   0000E4  5192               	movf	(_receiveData+50)& (0+255),w,b
  1915   0000E6  0FC8               	addlw	low _requestBuffer
  1916   0000E8  6ED9               	movwf	fsr2l,c
  1917   0000EA  6ADA               	clrf	fsr2h,c
  1918   0000EC  6ADF               	clrf	indf2,c
  1919   0000EE                     
  1920                           ; BSR set to: 0
  1921   0000EE  2B92               	incf	(_receiveData+50)& (0+255),f,b
  1922   0000F0                     
  1923                           ; BSR set to: 0
  1924                           ;main.c: 222:     processRequest();
  1925   0000F0  EC97  F004         	call	_processRequest	;wreg free
  1926   0000F4                     
  1927                           ;main.c: 225:     receiveData.index = 0;
  1928   0000F4  0E00               	movlw	0
  1929   0000F6  0100               	movlb	0	; () banked
  1930   0000F8  6F92               	movwf	(_receiveData+50)& (0+255),b
  1931   0000FA                     
  1932                           ; BSR set to: 0
  1933                           ;main.c: 226:     receiveData.receiving = 0x00;
  1934   0000FA  0E00               	movlw	0
  1935   0000FC  6F93               	movwf	(_receiveData+51)& (0+255),b
  1936   0000FE                     
  1937                           ; BSR set to: 0
  1938                           ;main.c: 227:     interrupt_flag = 0x01;
  1939   0000FE  0E01               	movlw	1
  1940   000100  6E29               	movwf	_interrupt_flag^0,c
  1941   000102                     
  1942                           ; BSR set to: 0
  1943                           ;main.c: 230:     end_sequence_flag = 0x00;
  1944   000102  0E00               	movlw	0
  1945   000104  6E27               	movwf	_end_sequence_flag^0,c
  1946                           
  1947                           ;main.c: 232:    }
  1948   000106  EFA9  F000         	goto	i2l1502
  1949   00010A                     i2l1486:
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;main.c: 234:    {;main.c: 238:     if (receiveData.index < 50)
  1953   00010A  0E32               	movlw	50
  1954   00010C  6192               	cpfslt	(_receiveData+50)& (0+255),b
  1955   00010E  EF8B  F000         	goto	i2u70_41
  1956   000112  EF8D  F000         	goto	i2u70_40
  1957   000116                     i2u70_41:
  1958   000116  EFA7  F000         	goto	i2l1500
  1959   00011A                     i2u70_40:
  1960   00011A                     
  1961                           ; BSR set to: 0
  1962                           ;main.c: 239:     {;main.c: 240:      if (end_sequence_flag == 0x01)
  1963   00011A  0427               	decf	_end_sequence_flag^0,w,c
  1964   00011C  A4D8               	btfss	status,2,c
  1965   00011E  EF93  F000         	goto	i2u71_41
  1966   000122  EF95  F000         	goto	i2u71_40
  1967   000126                     i2u71_41:
  1968   000126  EF9E  F000         	goto	i2l1496
  1969   00012A                     i2u71_40:
  1970   00012A                     
  1971                           ; BSR set to: 0
  1972                           ;main.c: 241:      {;main.c: 243:       end_sequence_flag = 0x00;
  1973   00012A  0E00               	movlw	0
  1974   00012C  6E27               	movwf	_end_sequence_flag^0,c
  1975   00012E                     
  1976                           ; BSR set to: 0
  1977                           ;main.c: 246:       requestBuffer[receiveData.index++] = 0x0D;
  1978   00012E  5192               	movf	(_receiveData+50)& (0+255),w,b
  1979   000130  0FC8               	addlw	low _requestBuffer
  1980   000132  6ED9               	movwf	fsr2l,c
  1981   000134  6ADA               	clrf	fsr2h,c
  1982   000136  0E0D               	movlw	13
  1983   000138  6EDF               	movwf	indf2,c
  1984   00013A                     
  1985                           ; BSR set to: 0
  1986   00013A  2B92               	incf	(_receiveData+50)& (0+255),f,b
  1987   00013C                     i2l1496:
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;main.c: 249:      requestBuffer[receiveData.index++] = receivedChar;
  1991   00013C  5192               	movf	(_receiveData+50)& (0+255),w,b
  1992   00013E  0FC8               	addlw	low _requestBuffer
  1993   000140  6ED9               	movwf	fsr2l,c
  1994   000142  6ADA               	clrf	fsr2h,c
  1995   000144  C00B  FFDF         	movff	isr@receivedChar,indf2
  1996   000148                     
  1997                           ; BSR set to: 0
  1998   000148  2B92               	incf	(_receiveData+50)& (0+255),f,b
  1999                           
  2000                           ;main.c: 250:     }
  2001   00014A  EFA9  F000         	goto	i2l1502
  2002   00014E                     i2l1500:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;main.c: 252:     {;main.c: 254:      receiveData.index = 0;
  2006   00014E  0E00               	movlw	0
  2007   000150  6F92               	movwf	(_receiveData+50)& (0+255),b
  2008   000152                     i2l1502:
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;main.c: 263:   PIE1bits.RC1IE = 1;
  2012   000152  8A9D               	bsf	157,5,c	;volatile
  2013   000154                     i2l110:
  2014   000154  C00A  FFDA         	movff	??_isr+3,fsr2h
  2015   000158  C009  FFD9         	movff	??_isr+2,fsr2l
  2016   00015C  C008  FFE2         	movff	??_isr+1,fsr1h
  2017   000160  C007  FFE1         	movff	??_isr,fsr1l
  2018   000164  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2019   000166  0011               	retfie		f
  2020   000168                     __end_of_isr:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _processRequest *****************
  2024 ;; Defined at:
  2025 ;;		line 272 in file "main.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  buffer_index    2    4[COMRAM] unsigned int 
  2030 ;;  length_index    2    2[COMRAM] unsigned int 
  2031 ;;  i               2    0[COMRAM] unsigned int 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2041 ;;      Params:         0       0       0       0       0       0       0
  2042 ;;      Locals:         6       0       0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0
  2044 ;;      Totals:         6       0       0       0       0       0       0
  2045 ;;Total ram usage:        6 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_isr
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text16
  2055   00092E                     __ptext16:
  2056                           	callstack 0
  2057   00092E                     _processRequest:
  2058                           	callstack 25
  2059   00092E                     
  2060                           ;main.c: 275:  unsigned int length_index = 0;
  2061   00092E  0E00               	movlw	0
  2062   000930  6E04               	movwf	(processRequest@length_index+1)^0,c
  2063   000932  0E00               	movlw	0
  2064   000934  6E03               	movwf	processRequest@length_index^0,c
  2065                           
  2066                           ;main.c: 276:  unsigned int i = 0;
  2067   000936  0E00               	movlw	0
  2068   000938  6E02               	movwf	(processRequest@i+1)^0,c
  2069   00093A  0E00               	movlw	0
  2070   00093C  6E01               	movwf	processRequest@i^0,c
  2071   00093E                     
  2072                           ;main.c: 278:  request_unit.DEVICE_ADDR = requestBuffer[0];
  2073   00093E  C0C8  F094         	movff	_requestBuffer,_request_unit
  2074   000942                     
  2075                           ;main.c: 279:  request_unit.ORDER_CODE = requestBuffer[1];
  2076   000942  C0C9  F095         	movff	_requestBuffer+1,_request_unit+1
  2077                           
  2078                           ;main.c: 282:  for (buffer_index = 0; requestBuffer[buffer_index + 2] != 0x00; buffer_in
      +                          dex++){
  2079   000946  0E00               	movlw	0
  2080   000948  6E06               	movwf	(processRequest@buffer_index+1)^0,c
  2081   00094A  0E00               	movlw	0
  2082   00094C  6E05               	movwf	processRequest@buffer_index^0,c
  2083   00094E  EFBB  F004         	goto	i2l1426
  2084   000952                     i2l1420:
  2085                           
  2086                           ;main.c: 283:   request_unit.payload_data[buffer_index] = requestBuffer[buffer_index + 2
      +                          ];
  2087   000952  5005               	movf	processRequest@buffer_index^0,w,c
  2088   000954  0FCA               	addlw	low (_requestBuffer+2)
  2089   000956  6ED9               	movwf	fsr2l,c
  2090   000958  6ADA               	clrf	fsr2h,c
  2091   00095A  5005               	movf	processRequest@buffer_index^0,w,c
  2092   00095C  0F98               	addlw	low (_request_unit+4)
  2093   00095E  6EE1               	movwf	fsr1l,c
  2094   000960  6AE2               	clrf	fsr1h,c
  2095   000962  CFDF FFE7          	movff	indf2,indf1
  2096   000966                     
  2097                           ;main.c: 286:   length_index = buffer_index + 2;
  2098   000966  0E02               	movlw	2
  2099   000968  2405               	addwf	processRequest@buffer_index^0,w,c
  2100   00096A  6E03               	movwf	processRequest@length_index^0,c
  2101   00096C  0E00               	movlw	0
  2102   00096E  2006               	addwfc	(processRequest@buffer_index+1)^0,w,c
  2103   000970  6E04               	movwf	(processRequest@length_index+1)^0,c
  2104   000972                     
  2105                           ;main.c: 287:         }
  2106   000972  4A05               	infsnz	processRequest@buffer_index^0,f,c
  2107   000974  2A06               	incf	(processRequest@buffer_index+1)^0,f,c
  2108   000976                     i2l1426:
  2109   000976  5005               	movf	processRequest@buffer_index^0,w,c
  2110   000978  0FCA               	addlw	low (_requestBuffer+2)
  2111   00097A  6ED9               	movwf	fsr2l,c
  2112   00097C  6ADA               	clrf	fsr2h,c
  2113   00097E  50DF               	movf	indf2,w,c
  2114   000980  A4D8               	btfss	status,2,c
  2115   000982  EFC5  F004         	goto	i2u58_41
  2116   000986  EFC7  F004         	goto	i2u58_40
  2117   00098A                     i2u58_41:
  2118   00098A  EFA9  F004         	goto	i2l1420
  2119   00098E                     i2u58_40:
  2120   00098E                     
  2121                           ;main.c: 290:  request_unit.payload_length_index = length_index;
  2122   00098E  C003  F096         	movff	processRequest@length_index,_request_unit+2
  2123   000992  C004  F097         	movff	processRequest@length_index+1,_request_unit+3
  2124   000996  0012               	return		;funcret
  2125   000998                     __end_of_processRequest:
  2126                           	callstack 0
  2127                           
  2128                           	psect	smallconst
  2129   000600                     __psmallconst:
  2130                           	callstack 0
  2131   000600  00                 	db	0
  2132   000601  00                 	db	0	; dummy byte at the end
  2133   000000                     
  2134                           	psect	rparam
  2135   000000                     
  2136                           	psect	temp
  2137   000037                     btemp:
  2138                           	callstack 0
  2139   000037                     	ds	1
  2140   000000                     int$flags	set	btemp
  2141   000000                     wtemp8	set	btemp+1
  2142   000000                     ttemp5	set	btemp+1
  2143   000000                     ttemp6	set	btemp+4
  2144   000000                     ttemp7	set	btemp+8
  2145                           
  2146                           	psect	config
  2147                           
  2148                           ; Padding undefined space
  2149   300000                     	org	3145728
  2150   300000  FF                 	db	255
  2151                           
  2152                           ;Config register CONFIG1H @ 0x300001
  2153                           ;	Oscillator Selection bits
  2154                           ;	FOSC = INTIO67, Internal oscillator block
  2155                           ;	4X PLL Enable
  2156                           ;	PLLCFG = ON, Oscillator multiplied by 4
  2157                           ;	Primary clock enable bit
  2158                           ;	PRICLKEN = ON, Primary clock enabled
  2159                           ;	Fail-Safe Clock Monitor Enable bit
  2160                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2161                           ;	Internal/External Oscillator Switchover bit
  2162                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2163   300001                     	org	3145729
  2164   300001  38                 	db	56
  2165                           
  2166                           ;Config register CONFIG2L @ 0x300002
  2167                           ;	Power-up Timer Enable bit
  2168                           ;	PWRTEN = OFF, Power up timer disabled
  2169                           ;	Brown-out Reset Enable bits
  2170                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2171                           ;	Brown Out Reset Voltage bits
  2172                           ;	BORV = 250, VBOR set to 2.50 V nominal
  2173   300002                     	org	3145730
  2174   300002  0F                 	db	15
  2175                           
  2176                           ;Config register CONFIG2H @ 0x300003
  2177                           ;	Watchdog Timer Enable bits
  2178                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2179                           ;	Watchdog Timer Postscale Select bits
  2180                           ;	WDTPS = 32768, 1:32768
  2181   300003                     	org	3145731
  2182   300003  3C                 	db	60
  2183                           
  2184                           ; Padding undefined space
  2185   300004                     	org	3145732
  2186   300004  FF                 	db	255
  2187                           
  2188                           ;Config register CONFIG3H @ 0x300005
  2189                           ;	CCP2 MUX bit
  2190                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2191                           ;	PORTB A/D Enable bit
  2192                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2193                           ;	P3A/CCP3 Mux bit
  2194                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  2195                           ;	HFINTOSC Fast Start-up
  2196                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2197                           ;	Timer3 Clock input mux bit
  2198                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2199                           ;	ECCP2 B output mux bit
  2200                           ;	P2BMX = PORTB5, P2B is on RB5
  2201                           ;	MCLR Pin Enable bit
  2202                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2203   300005                     	org	3145733
  2204   300005  BF                 	db	191
  2205                           
  2206                           ;Config register CONFIG4L @ 0x300006
  2207                           ;	Stack Full/Underflow Reset Enable bit
  2208                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2209                           ;	Single-Supply ICSP Enable bit
  2210                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  2211                           ;	Extended Instruction Set Enable bit
  2212                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2213                           ;	Background Debug
  2214                           ;	DEBUG = 0x1, unprogrammed default
  2215   300006                     	org	3145734
  2216   300006  85                 	db	133
  2217                           
  2218                           ; Padding undefined space
  2219   300007                     	org	3145735
  2220   300007  FF                 	db	255
  2221                           
  2222                           ;Config register CONFIG5L @ 0x300008
  2223                           ;	Code Protection Block 0
  2224                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2225                           ;	Code Protection Block 1
  2226                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2227                           ;	Code Protection Block 2
  2228                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2229                           ;	Code Protection Block 3
  2230                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2231   300008                     	org	3145736
  2232   300008  0F                 	db	15
  2233                           
  2234                           ;Config register CONFIG5H @ 0x300009
  2235                           ;	Boot Block Code Protection bit
  2236                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2237                           ;	Data EEPROM Code Protection bit
  2238                           ;	CPD = OFF, Data EEPROM not code-protected
  2239   300009                     	org	3145737
  2240   300009  C0                 	db	192
  2241                           
  2242                           ;Config register CONFIG6L @ 0x30000A
  2243                           ;	Write Protection Block 0
  2244                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2245                           ;	Write Protection Block 1
  2246                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2247                           ;	Write Protection Block 2
  2248                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2249                           ;	Write Protection Block 3
  2250                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2251   30000A                     	org	3145738
  2252   30000A  0F                 	db	15
  2253                           
  2254                           ;Config register CONFIG6H @ 0x30000B
  2255                           ;	Configuration Register Write Protection bit
  2256                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2257                           ;	Boot Block Write Protection bit
  2258                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2259                           ;	Data EEPROM Write Protection bit
  2260                           ;	WRTD = OFF, Data EEPROM not write-protected
  2261   30000B                     	org	3145739
  2262   30000B  E0                 	db	224
  2263                           
  2264                           ;Config register CONFIG7L @ 0x30000C
  2265                           ;	Table Read Protection Block 0
  2266                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2267                           ;	Table Read Protection Block 1
  2268                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2269                           ;	Table Read Protection Block 2
  2270                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2271                           ;	Table Read Protection Block 3
  2272                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2273   30000C                     	org	3145740
  2274   30000C  0F                 	db	15
  2275                           
  2276                           ;Config register CONFIG7H @ 0x30000D
  2277                           ;	Boot Block Table Read Protection bit
  2278                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2279   30000D                     	org	3145741
  2280   30000D  40                 	db	64
  2281                           tosu	equ	0xFFF
  2282                           tosh	equ	0xFFE
  2283                           tosl	equ	0xFFD
  2284                           stkptr	equ	0xFFC
  2285                           pclatu	equ	0xFFB
  2286                           pclath	equ	0xFFA
  2287                           pcl	equ	0xFF9
  2288                           tblptru	equ	0xFF8
  2289                           tblptrh	equ	0xFF7
  2290                           tblptrl	equ	0xFF6
  2291                           tablat	equ	0xFF5
  2292                           prodh	equ	0xFF4
  2293                           prodl	equ	0xFF3
  2294                           indf0	equ	0xFEF
  2295                           postinc0	equ	0xFEE
  2296                           postdec0	equ	0xFED
  2297                           preinc0	equ	0xFEC
  2298                           plusw0	equ	0xFEB
  2299                           fsr0h	equ	0xFEA
  2300                           fsr0l	equ	0xFE9
  2301                           wreg	equ	0xFE8
  2302                           indf1	equ	0xFE7
  2303                           postinc1	equ	0xFE6
  2304                           postdec1	equ	0xFE5
  2305                           preinc1	equ	0xFE4
  2306                           plusw1	equ	0xFE3
  2307                           fsr1h	equ	0xFE2
  2308                           fsr1l	equ	0xFE1
  2309                           bsr	equ	0xFE0
  2310                           indf2	equ	0xFDF
  2311                           postinc2	equ	0xFDE
  2312                           postdec2	equ	0xFDD
  2313                           preinc2	equ	0xFDC
  2314                           plusw2	equ	0xFDB
  2315                           fsr2h	equ	0xFDA
  2316                           fsr2l	equ	0xFD9
  2317                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      54
    BANK0           160      0     154
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_createResponse
    _createResponse->_writeDataToEEPROM
    _writeDataToEEPROM->_writeByteAT24_EEPROM
    _writeByteAT24_EEPROM->_I2C2_Send
    _sendResponse->_UART_TransmitChar
    _UART_Init->___fltol

Critical Paths under _isr in COMRAM

    _isr->_processRequest

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1306
                          _I2C2_Init
                          _UART_Init
                     _createResponse
 ---------------------------------------------------------------------------------
 (1) _createResponse                                       1     1      0     978
                                             25 COMRAM     1     1      0
                 _createPingResponse
                       _sendResponse
                  _writeDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _writeDataToEEPROM                                   11    11      0     818
                                             15 COMRAM    10    10      0
                        _EEPROM_Read
                       _EEPROM_Write
               _writeByteAT24_EEPROM
 ---------------------------------------------------------------------------------
 (3) _writeByteAT24_EEPROM                                 3     0      3     392
                                             12 COMRAM     3     0      3
                          _I2C2_Send
                         _I2C2_Start
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C2_Send                                            1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Write                                         2     1      1     196
                                             11 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _sendResponse                                         3     3      0     137
                                             12 COMRAM     3     3      0
                  _UART_TransmitChar
 ---------------------------------------------------------------------------------
 (3) _UART_TransmitChar                                    1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _createPingResponse                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     4      0     328
                                             21 COMRAM     4     4      0
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             11 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _I2C2_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0     227
                                              6 COMRAM     5     5      0
                     _processRequest
 ---------------------------------------------------------------------------------
 (6) _processRequest                                       6     6      0     116
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C2_Init
   _UART_Init
     ___fltol
   _createResponse
     _createPingResponse
     _sendResponse
       _UART_TransmitChar
     _writeDataToEEPROM
       _EEPROM_Read
       _EEPROM_Write
       _writeByteAT24_EEPROM
         _I2C2_Send
         _I2C2_Start
         _I2C2_Stop

 _isr (ROOT)
   _processRequest

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      9A       4       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      36       1       57.4%
BITBIGSFRlh         59      0       0      24        0.0%
BITBIGSFRhlhhhh     1E      0       0      16        0.0%
BITBIGSFRhlhhhl     15      0       0      18        0.0%
BITBIGSFRhh          D      0       0      15        0.0%
BITBIGSFRhlhhhl      9      0       0      17        0.0%
BITBIGSFRhlll        6      0       0      23        0.0%
BITBIGSFRhlhlll      4      0       0      20        0.0%
BITBIGSFRll          2      0       0      25        0.0%
BITBIGSFRhllh        1      0       0      22        0.0%
BITBIGSFRhlhlh       1      0       0      19        0.0%
BITBIGSFRhlhlll      1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D0      26        0.0%
DATA                 0      0      D0      28        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Apr 16 12:22:56 2024

                   EEPROM_Write@eep_data 000C                                       l90 0B48  
                                     l93 0B5A                                       l87 0A7C  
                 ??_writeByteAT24_EEPROM 0010                                      l201 0B5E  
                                    l131 0B94                                      l203 0B6C  
                                    l204 0B6E                                      l221 0AF4  
                                    l141 0B2C                                      l222 0B08  
                                    l152 0A9E                                      l128 09F6  
                                    l154 0AAC                                      l138 0774  
                                    l155 0AAE                                      l219 0AE6  
                                    l149 092C                                      l158 0BA2  
                                    l191 0B80                                      l192 0B82  
                                    l186 0B44                                      l189 0B72  
                                    l528 087A                                      u400 0AF4  
                                    u401 0AF0                                      u410 0B06  
                                    u411 0B00                                      u500 092C  
                                    u420 0B6C                                      u501 0928  
                                    u421 0B68                                      u510 078C  
                                    u430 0B56                                      u511 0788  
                                    u431 0B52                                      u520 07C0  
                                    u440 0AAC                                      u416 0B08  
                                    u441 0AA8                                      u530 07EE  
                                    u450 0664                                      u531 07EA  
                                    u451 0660                                      u540 0802  
                                    u460 0702                                      u541 07FE  
                                    u525 07B6                                      u461 06FE  
                                    u550 082A                                      u390 0B80  
                                    u470 0770                                      u551 0826  
                                    u391 0B7C                                      u471 076A  
                                    u560 084A                                      u480 0772  
                                    u720 0AD0                                      u561 0846  
                                    u721 0ACC                                      u570 085A  
                                    u490 08E2                                      u571 0856  
                                    u491 08DE                                      u590 09B0  
                                    u807 08C0                                      u591 09AC  
                                    u817 08EE                                      u737 0624  
                                    u747 06AA                                      u757 06E0  
                                    u767 071E                                      u777 0740  
                                    u787 0888                                      u797 089C  
                                    _isr 0008                                      wreg 0FE8  
                           ___fltol@exp1 0015                                     l1130 0B2E  
                                   l1132 0B38                                     l1220 0AE2  
                                   l1300 06BE                                     l1230 0B9C  
                                   l1222 0B5C                                     l1310 070A  
                                   l1302 06DA                                     l1400 084A  
                                   l1224 0B48                                     l1232 0B9E  
                                   l1240 0B0E                                     l1320 0752  
                                   l1312 0714                                     l1304 06E8  
                                   l1402 085A                                     l1410 0A4C  
                                   l1226 0B56                                     l1330 087C  
                                   l1234 0BA0                                     l1250 0A84  
                                   l1218 0B70                                     l1242 0B16  
                                   l1322 0756                                     l1314 072C  
                                   l1306 06EC                                     l1404 086A  
                                   l1412 0A64                                     l1332 0882  
                                   l1228 0B98                                     l1260 0A90  
                                   l1252 0A88                                     l1244 0B1C  
                                   l1324 075A                                     l1316 0736  
                                   l1308 0702                                     l1270 0B84  
                                   l1350 08E2                                     l1342 08AC  
                                   l1334 0890                                     l1262 0A94  
                                   l1254 0A8A                                     l1246 0B22  
                                   l1238 0B0A                                     l1326 075E  
                                   l1318 074E                                     l1430 099C  
                                   l1510 0AC0                                     l1408 0A3E  
                                   l1272 0B8C                                     l1360 0914  
                                   l1352 08E8                                     l1344 08BA  
                                   l1336 0896                                     l1328 087C  
                                   l1264 0A98                                     l1256 0A8C  
                                   l1248 0A80                                     l1280 0632  
                                   l1440 09C4                                     l1512 0AD0  
                                   l1504 0AB0                                     l1370 07A0  
                                   l1362 091A                                     l1354 08F6  
                                   l1346 08C8                                     l1266 0A9A  
                                   l1258 0A8E                                     l1290 0674  
                                   l1282 063A                                     l1274 0602  
                                   l1442 09F2                                     l1434 09B4  
                                   l1514 0AD4                                     l1506 0AB8  
                                   l1380 07EE                                     l1372 07CA  
                                   l1364 0776                                     l1356 08FC  
                                   l1348 08CC                                     l1268 0A9C  
                                   l1292 0688                                     l1284 0650  
                                   l1276 0612                                     l1436 09BC  
                                   l1428 0998                                     l1508 0ABC  
                                   l1390 081A                                     l1374 07CC  
                                   l1366 078C                                     l1358 0908  
                                   l1294 06A0                                     l1286 0664  
                                   l1278 061A                                     l1376 07DC  
                                   l1296 06A4                                     l1288 066C  
                                   l1386 0806                                     l1378 07E0  
                                   l1298 06B2                                     l1396 082E  
                                   l1388 0810                                     l1398 083A  
                                   ?_isr 0001                                     _main 0AB0  
                                   fsr1h 0FE2                                     fsr2h 0FDA  
                                   indf1 0FE7                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   btemp 0037                                     start 0168  
       writeDataToEEPROM@at24_eep_addr_H 0012         writeDataToEEPROM@at24_eep_addr_L 0013  
                           ___param_bank 0000                     __end_of_EEPROM_Write 0AB0  
                                  ??_isr 0007                          isr@receivedChar 000B  
                          ___fltol@sign1 0014                        __end_of_I2C2_Init 0B46  
                                  ?_main 0001                        __end_of_I2C2_Send 0B0A  
                                  _EEADR 0FA9                        __end_of_I2C2_Stop 0B70  
                        __end_of___fltol 087C                                    i2l100 0066  
                                  i2l110 0154                                    i2l115 098E  
                                  i2l116 0996                                    _RCREG 0FAE  
                                  _TXREG 0FAD                         ??_createResponse 001A  
                                  tablat 0FF5                                    ttemp5 0038  
                                  ttemp6 003B                                    ttemp7 003F  
                                  status 0FD8                                    wtemp8 0038  
                       EEPROM_Write@addr 000D                             ??_I2C2_Start 000C  
                        __initialization 09F8                             __end_of_main 0AE0  
            writeByteAT24_EEPROM@address 000D                      _start_sequence_flag 0028  
                                 ??_main 001B                            __activetblptr 0002  
                    _at24_eeprom_address 0025                                   _EEDATA 0FA8  
                                 _EECON2 0FA7                       __end_of_I2C2_Start 0B84  
             __end_of_createPingResponse 0B96                                   i2l1420 0952  
                                 i2l1500 014E                                   i2l1422 0966  
                                 i2l1414 092E                                   i2l1502 0152  
                                 i2l1424 0972                                   i2l1416 093E  
                                 i2l1426 0976                                   i2l1418 0942  
                                 i2l1450 0040                                   i2l1460 0090  
                                 i2l1452 0052                                   i2l1444 001A  
                                 i2l1470 00D4                                   i2l1454 0062  
                                 i2l1462 0098                                   i2l1446 0028  
                                 i2l1480 00FA                                   i2l1472 00E4  
                                 i2l1464 00AA                                   i2l1456 0078  
                                 i2l1448 002E                                   i2l1490 012A  
                                 i2l1482 00FE                                   i2l1474 00EE  
                                 i2l1466 00BA                                   i2l1458 0088  
                                 i2l1492 012E                                   i2l1484 0102  
                                 i2l1476 00F0                                   i2l1468 00C2  
                                 i2l1494 013A                                   i2l1478 00F4  
                                 i2l1486 010A                                   i2l1496 013C  
                                 i2l1488 011A                                   i2l1498 0148  
                                 _RCSTA1 0FAB                                   _OSCCON 0FD3  
                                 _SPBRG1 0FAF                                   _TRISC6 7CA6  
                                 _TRISC7 7CA7                                   _TXSTA1 0FAC  
                      __end_of_UART_Init 0A7E                        _writeDataToEEPROM 0602  
                              ??___fltol 0010                                   _digits 002A  
                       ??_processRequest 0001                       ?_writeDataToEEPROM 0001  
                                 clear_0 0A1E                                   clear_1 0A2A  
                                 isa$std 0001                             __pdataCOMRAM 002A  
                    ??_writeDataToEEPROM 0010                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                               __accesstop 0060  
                __end_of__initialization 0A30                            ___rparam_used 0001  
                             ___fltol@f1 000C                __end_of_writeDataToEEPROM 0776  
                         __pcstackCOMRAM 0001  writeDataToEEPROM@at24_eeprom_addr_start 0016  
                           _EEPROM_Write 0A7E                               __pbssBANK0 0060  
                          ?_sendResponse 0001                                _I2C2_Init 0B2E  
                              _I2C2_Send 0AE0                                _I2C2_Stop 0B5C  
                                i2u60_40 0028                                  i2u60_41 0024  
                                i2u61_40 0040                                  i2u61_41 003C  
                                i2u70_40 011A                                  i2u62_40 0052  
                                i2u70_41 0116                                  i2u62_41 004E  
                                _OSCTUNE 0F9B                                  i2u71_40 012A  
                                i2u63_40 0062                                  i2u71_41 0126  
                                i2u63_41 005E                                  i2u64_40 0078  
                                i2u64_41 0074                                  i2u65_40 0088  
                                i2u65_41 0084                                  i2u58_40 098E  
                                i2u66_40 00AA                                  i2u58_41 098A  
                                i2u66_41 00A6                                  i2u67_40 00BA  
                                i2u67_41 00B6                                  i2u68_40 00D4  
                                i2u68_41 00D0                                  i2u69_40 00E4  
                                i2u69_41 00E0                                  _SSP1ADD 0FC8  
                                _SSP1BUF 0FC9                           ??_sendResponse 000D  
                                __Hparam 0000                                  __Lparam 0000  
                                ___fltol 0776                             __psmallconst 0600  
                                __pcinit 09F8                          processRequest@i 0001  
                                __ramtop 0600                                  __ptext0 0AB0  
                                __ptext1 0998                                  __ptext2 0602  
                                __ptext3 0B0A                                  __ptext4 0B5C  
                                __ptext5 0B70                                  __ptext6 0AE0  
                                __ptext7 0A7E                                  __ptext8 0B96  
                                __ptext9 087C                               ?_I2C2_Init 0001  
                             ?_I2C2_Send 0001                               ?_I2C2_Stop 0001  
                                _timeout 0034                     end_of_initialization 0A30  
                          ??_EEPROM_Read 000C                            __Lmediumconst 0000  
                     writeDataToEEPROM@i 0018                       _createPingResponse 0B84  
                                postdec1 0FE5                                  postinc0 0FEE  
                              _UART_Init 0A3E                      ?_createPingResponse 0001  
                              _TRISCbits 0F94                 writeByteAT24_EEPROM@data 000F  
                   ??_createPingResponse 000C                      __end_of_EEPROM_Read 0BA4  
                             ?_UART_Init 0001                            __pidataCOMRAM 0BA4  
                   __end_of_sendResponse 092E                      start_initialization 09F8  
                            ??_I2C2_Init 000C                              ??_I2C2_Send 000C  
                            ??_I2C2_Stop 000C                              __end_of_isr 0168  
                            __pbssCOMRAM 001B                           _responseBuffer 001B  
           __end_of_writeByteAT24_EEPROM 0B2E                              _EEPROM_Read 0B96  
                              __pintcode 0008                            UART_Init@temp 0016  
                               ?___fltol 000C                        _UART_TransmitChar 0B46  
                            ??_UART_Init 0016                       ?_UART_TransmitChar 0001  
                            __smallconst 0600                      ??_UART_TransmitChar 000C  
                               _PIE1bits 0F9D                                 _PIE2bits 0FA0  
                         _createResponse 0998                                 _PIR1bits 0F9E  
                               _PIR2bits 0FA1                               _I2C2_Start 0B70  
        writeDataToEEPROM@payload_length 0014                __end_of_UART_TransmitChar 0B5C  
                               _SSP1CON1 0FC6                                 _SSP1STAT 0FC7  
                      _end_sequence_flag 0027                                copy_data0 0A0C  
                 __end_of_createResponse 09F8                             _sendResponse 087C  
                             _EECON1bits 0FA6                            _requestBuffer 00C8  
                               __Hrparam 0000                                 __Lrparam 0000  
                             _ANSELCbits 0F3A                     _writeByteAT24_EEPROM 0B0A  
                               _checkAck 0036               processRequest@buffer_index 0005  
                         _processRequest 092E                                 __ptext10 0B46  
                               __ptext11 0B84                                 __ptext12 0A3E  
                               __ptext13 0776                                 __ptext14 0B2E  
                               __ptext16 092E                             _SSP1CON2bits 0FC5  
                      sendResponse@index 000E                            ?_EEPROM_Write 000C  
                        ?_createResponse 0001                              _receiveData 0060  
                  UART_TransmitChar@data 000C                              ?_I2C2_Start 0001  
                               isa$xinst 0000                                 int$flags 0037  
                  ?_writeByteAT24_EEPROM 000D                   __end_of_processRequest 0998  
                             _INTCONbits 0FF2                             _request_unit 0094  
                         ??_EEPROM_Write 000D                                 intlevel2 0000  
                           ?_EEPROM_Read 0001                          ?_processRequest 0001  
                         _interrupt_flag 0029                            I2C2_Send@BYTE 000C  
             processRequest@length_index 0003                          EEPROM_Read@addr 000C  
               createResponse@ORDER_CODE 001A  
